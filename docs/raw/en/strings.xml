<?xml version="1.0" encoding="UTF-8"?>
<!--This file is auto-generated by ./scripts/docs.php. DO NOT EDIT THIS FILE.-->
<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
    <string name="keywords$chapter">\\newcommand{\\KeywordChapter}{Chapter}</string>
    <string name="keywords$see_also">\\newcommand{\\KeywordSeeAlso}{See also:}</string>
    <string name="keywords$end_of_keyword_in_alert">\\newcommand{\\KeywordEndOfKeyWordInAlert}{.}</string>
    <string name="titlepage$user_manual">{\\huge\\bfseries User Manual\\par}</string>
    <string name="titlepage$quotation">\\begin{quotation}\n            ``Wisely and slow. They stumble that run fast.\'\'\n            %\\sourceatright\n                {--- Friar Laurence, \\textit{Romeo and Juliet}}\n        \\end{quotation}</string>
    <string name="intro$main$$introduction-chapter-title">Introduction</string>
    <string name="intro$main$$terminologies-title">Terminologies</string>
    <string name="intro$main$$supported-versions-title">Supported Versions</string>
    <string name="intro$main$$official-sources-title">Official Sources</string>
    <string name="intro$main$$bin-sources-title">Binary Distribution Sources</string>
    <string name="intro$main$$source-code-links-title">Links to Source Code</string>
    <string name="intro$main$$translations-title">Translations</string>
    <string name="intro$main$$contributing-title">Contributing</string>
    <string name="intro$main$$buiding-title">Build Instructions</string>
    <string name="intro$main$$submit-patches-title">Submitting patches</string>
    <string name="intro$main$$donation-title">Donation \\&amp; Funding</string>
    <string name="intro$main$$contact-title">Contact</string>
    <string name="intro$main$intro">App Manager is an advanced package manager for Android. It offers countless features, and consequently, requires a user\nmanual to assist its users. This document acts as a user manual for App Manager in the sense that it aims to describe\nevery feature that App Manager has to offer. This document can also be considered as the ``official\'\' guidelines for\nApp Manager, and represents the expected behaviour of App Manager. Translations can misinterpret this document (which is\nwritten in English). Therefore, every capable user should read the English version of the document to get the best out\nof App Manager. There might as well be other unofficial or third-party resources such as blog articles, videos, chat\ngroups, etc. While these resources might be useful for many people, they might not be up-to-date with the current\nversion of App Manager. If any deviations are detected in App Manager from this document, they should be reported in the\n\\href{https://github.com/MuntashirAkon/AppManager/issues}{App Manager issue tracker}.</string>
    <string name="intro$main$terminologies">\\begin{itemize}\n    \\item \\textbf{AM} --- Short name for App Manager.\n    \\item \\textbf{Block/Unblock} --- Used for component blocking or unblocking. How components are blocked depends on\n    the user preferences.\n    \\item \\textbf{IFW} --- Short form of Intent Firewall.\n    \\item \\textbf{Ops} --- Short name for operations, e.g.\\ app ops, batch ops, 1-click ops\n    \\item \\textbf{SAF} --- Short for Storage Access Framework, an abstraction used by Android to allow apps to use or\n    serve files without worrying about the underlying file system.\n    \\item \\textbf{SSAID} --- Short form of \\texttt{Settings.Secure.ANDROID\\_ID}. It is a device identifier assigned to\n    each app (Android Oreo and onwards). It is generated from the combination of the signing certificate of the app\n    and the SSAID set for the package \\texttt{android}. As a result, it is guaranteed to be the same for an app unless\n    the user choose to format the device. It is widely used for tracking.\n    \\item \\textbf{Tracker} --- Denotes tracker components throughout the document and in App Manager except in the\n    \\hyperref[sec:scanner-page]{scanner page}. Trackers include libraries such as crash reporters, analytics,\n    profiling, identification, ad, location, etc. Thus, they are not equal in functions. There is no distinction or bias\n    between open source and closed source libraries that promote tracking.\n\\end{itemize}</string>
    <string name="intro$main$supported-versions">At present, the supported versions are v3.1.5 and v4.1.0 (stable), v4.2.0 (alpha and debug releases).\nPrevious versions of App Manager may contain security vulnerabilities and should not be used.</string>
    <string name="intro$main$bin-sources">App Manager is distributed using the following sources. Unofficial sources may distribute modified versions of App\nManager, and none but you shall be responsible for the consequences of using such distributions.\n\\begin{enumerate}\n    \\item Official F-Droid repository.\\footnote{For distributing normal releases only}\\\\\n    \\textit{Link:} \\url{https://f-droid.org/packages/io.github.muntashirakon.AppManager}\n    \\item GitHub repository.\\\\\n    \\textit{Normal releases:} \\url{https://github.com/MuntashirAkon/AppManager/releases}\\\\\n    \\textit{Debug releases:} \\url{https://github.com/MuntashirAkon/AppManager/actions}\n    \\item Telegram.\\\\\n    \\textit{Normal releases:} \\url{https://t.me/AppManagerChannel}\\\\\n    \\textit{Debug releases:} \\url{https://t.me/AppManagerDebug}\n\\end{enumerate}</string>
    <string name="intro$main$source-code-links">All but GitHub are the mirror links. The tags should always be up-to-date, but the master branch is not guaranteed to be\nup-to-date. If the target is to clone the master branch, use the GitHub link instead of the others.</string>
    <string name="intro$main$translations">App Manager does not accept translations directly via pull/merge requests. Translations are managed via Hosted Weblate.\nTo translate App Manager, visit \\url{https://hosted.weblate.org/engage/app-manager/}.</string>
    <string name="intro$main$contributing">There are multiple ways a user can contribute, such as creating helpful issues, attending discussions, improving\ndocumentations and translations, adding unrecognised libraries or trackers, reviewing the source code as well as\nreporting security vulnerabilities.</string>
    <string name="intro$main$buiding">Build instructions are available in the BUILDING file located at the root directory of the source.</string>
    <string name="intro$main$submit-patches">Repositories located in sites other than GitHub are currently considered mirrors, and pull/merge requests submitted in\nthose sites will not be accepted.\\footnote{GitHub pull requests will be merged manually using the corresponding patches.\nAs a result, GitHub may wrongfully mark them closed instead of merged.} Instead, patches (as \\texttt{.patch} files) can\nbe submitted via email attachments. \\textit{Signing-off is a requirement.} See the CONTRIBUTING file located at the root\ndirectory of the source for more information.\n\n\\begin{warning}{Notice}\n    In case of submitting patches via email, the whole conversation may be publicly accessible in the future. So, do not\n    include any personally identifiable information (PII) other than your name or email address.\n\\end{warning}</string>
    <string name="intro$main$donation">% \\emph{Donation or purchasing is not a requirement in order to use App Manager.} While App Manager does not support any\n% purchases, donations can be sent to the owner of App Manager through Open Source Collective.\n%\n% Open Source Collective is a fiscal host in the Open Collective platform which helps the open source projects manage\n% their finances. At present, it supports payments through bank accounts, PayPal, credit or debit cards and\n% cryptocurrencies.\n%\n% \\textit{Link:} \\url{https://opencollective.com/muntashir}.\n%\n% By sending donations, the senders agree that they shall not use the donations as a leverage to prioritise their\n% requested features. Feature requests do not require any bounties or donations, and they are prioritised in accordance\n% with the preferences of the owner.\n%\n% \\emph{App Manager accepts any offers of funding or grants.} Representatives of the interested organization can contact\n% the owner directly using the options given in \\Sref{sec:contact}.\n\nAs of September 2024, App Manager is not accepting any financial support until further notice. But\nyou may still be able to send gifts (e.g., gift cards, subscriptions, food and drink, flowers, or\neven cash). Please contact the maintainer using the options given in \\Sref{sec:contact} for further\nassistance.</string>
    <string name="intro$main$contact">Muntashir Al-Islam\\footnote{You can also address me as ``Muntashir Akon\'\'}\\\\\nEmail: \\href{mailto:muntashirakon\@riseup.net}{muntashirakon [at] riseup [dot] net}\\\\\nGitHub: \\url{https://github.com/MuntashirAkon}\\\\\nTwitter/X: \\url{https://x.com/Muntashir}\\\\\nMastodon: \\href{https://infosec.exchange/\@muntashir}{\@muntashir\@infosec.exchange}</string>
    <string name="pages$main$$pages-chapter-title">Pages</string>
    <string name="pages$main-page$$section-title">Main Page</string>
    <string name="pages$main-page$$how-app-ops-work-title">An application list item in the main page</string>
    <string name="pages$main-page$$batch-operations-title">Batch Operations</string>
    <string name="pages$main-page$$colour-codes-title">Colour Codes</string>
    <string name="pages$main-page$$application-types-title">Application Types</string>
    <string name="pages$main-page$$version-info-title">Version Info</string>
    <string name="pages$main-page$$options-menu-title">Options Menu</string>
    <string name="pages$main-page$$list-options-title">List Options</string>
    <string name="pages$main-page$$sort-title">Sort</string>
    <string name="pages$main-page$$filter-title">Filter</string>
    <string name="pages$main-page$$profile_name-title">Profile Name</string>
    <string name="pages$main-page$$instructions-title">User Manual</string>
    <string name="pages$main-page$$1-click-ops-title">1-Click Ops</string>
    <string name="pages$main-page$$app-usage-title">App Usage</string>
    <string name="pages$main-page$$system-config-title">System Config</string>
    <string name="pages$main-page$$running-apps-title">Running Apps</string>
    <string name="pages$main-page$$profiles-title">Profiles</string>
    <string name="pages$main-page$$log-viewer-title">Log Viewer</string>
    <string name="pages$main-page$$apk-updater-title">APK Updater</string>
    <string name="pages$main-page$$termux-title">Termux</string>
    <string name="pages$main-page$$settings-title">Settings</string>
    <string name="pages$main-page$intro">Main page lists all the installed, uninstalled and backed up applications. A single click on any installed app item\nopens the respective \\hyperref[sec:app-details-page]{App Details page}. For the uninstalled system apps, it displays a\ndialog prompt which can be used to reinstall the app. Using the \\hyperlink{par:main-page-sort}{sort} option from the\nlist options, the app items can be sorted in various ways and preserved on exit. It is also possible to filter items\nusing the \\hyperlink{par:main-page-filter}{filter} option in the list options. Filtering is possible also via the search\nbar with additional support for the regular expressions.</string>
    <string name="pages$main-page$batch-operations">Batch operations or operation on multiple applications are also available within this page. Multiple selection mode can\nbe activated by clicking on any app icon or by long-clicking on any items in the list. Once activated, a single click on\na list item selects it instead of opening the App Details page. In this mode, the batch operations are located in the\nmultiple selection menu at the bottom of the page. The operations include:\n\\begin{itemize}\n    \\item Adding the selected applications to a \\hyperref[sec:profiles-page]{profile}\n    \\item \\hyperref[sec:backup-restore]{Backing up, restoring or deleting} the applications\n    \\item Blocking the trackers from the applications\n    \\item Clearing data or cache from the applications\n    \\item Exporting the blocking rules configured inside App Manager\n    \\item Exporting the list of apps in Markdown or XML format\n    \\item Freezing/unfreezing/force-stopping/uninstalling the applications\n    \\item Preventing the background operations of the applications (Android 7 and onwards)\n    \\item Saving the APK files to \\texttt{AppManager/apks}\n    \\item Setting \\hyperref[sec:net-policy]{net policies}\n\\end{itemize}\n\n\\begin{tip}{Accessibility}\n    After the multiple selection mode has been activated, it is possible to navigate in or out of the multiple selection\n    menu using the right or left keys of the keyboard or remote.\n\\end{tip}</string>
    <string name="pages$main-page$colour-codes">\\begin{itemize}\n    \\item \\colorbox{AMLightGreyishOrange}{\\textcolor{black}{Light greyish orange (day)}} / \\colorbox{AMDarkBlue}{\n        \\textcolor{white}{dark blue (night)}} -- The application is selected for batch operation\n    \\item \\colorbox{AMLightRed}{\\textcolor{black}{Light red (day)}} / \\colorbox{AMVeryDarkRed}{\\textcolor{white}\n    {dark red (night)}} -- Frozen app\n    \\item \\colorbox{AMYellow}{\\textcolor{black}{Yellow Star}} -- Debuggable application\n    \\item \\textcolor{AMOrange}{Orange \\textit{Date}} -- The app has access to the system logs\n    \\item \\textcolor{AMOrange}{Orange \\textit{UID}} -- The user ID is being shared among multiple applications\n    \\item \\textcolor{AMOrange}{Orange \\textit{SDK}} -- The application possibly uses cleartext (i.e.\\ HTTP) traffic\n    \\item \\textcolor{red}{Red \\textit{package name}} -- The application does not allow clearing its data\n    \\item \\textcolor{red}{Red \\textit{backup}} -- The uninstalled application with one or more backups present in App\n    Manager\n    \\item \\textcolor{AMOrange}{Orange \\textit{backup}} -- Outdated backup, i.e.\\ the base backup contains an older\n    version of the installed application\n    \\item \\textcolor{AMDarkCyan}{Dark cyan \\textit{backup}} -- Up to date backup, i.e.\\ the base backup contains the\n    same or higher version of the installed application\n    \\item \\textcolor{AMDarkCyan}{Dark cyan \\textit{package name}} -- Force-stopped application\n    \\item \\textcolor{AMDarkCyan}{Dark cyan \\textit{version}} -- Inactive application\n    \\item \\textcolor{magenta}{Magenta} -- Persistent application i.e.\\ it remains running all the time.\n\\end{itemize}</string>
    <string name="pages$main-page$application-types">An application can be either a \\textbf{User} or a \\textbf{System} application along with the following suffixes:\n\\begin{itemize}\n    \\item \\texttt{X} -- Supports multiple architectures\n    \\item \\texttt{0} -- No dex files present in the application\n    \\item \\texttt{°} -- Suspended application\n    \\item \\texttt{\\#} -- The application requested the system to allocate a large heap i.e.\\ large runtime memory\n    \\item \\texttt{\?} -- The application requested the virtual machine to be in the safe mode.\n\\end{itemize}</string>
    <string name="pages$main-page$version-info">Version name is followed by the prefixes below:\n\\begin{itemize}\n    \\item \\texttt{\\_} -- No hardware acceleration (breaking the in-app animations or transparencies)\n    \\item \\texttt{\\textasciitilde} -- Test-only application\n    \\item \\texttt{debug} -- Debuggable application\n\\end{itemize}</string>
    <string name="pages$main-page$options-menu">Options menu offers several options that can be used to sort and filter the listed applications as well as to navigate\nto different pages within or outside App Manager.</string>
    <string name="pages$main-page$list-options">\\textbf{List options} contain the options to sort and filter the list in the main page.</string>
    <string name="pages$main-page$sort">The applications listed in the main page can be sorted in the following ways:\n\\begin{itemize}\n    \\item \\textbf{User apps first.} The user applications are listed on top\n    \\item \\textbf{App label.} Sort the list in ascending order based on their application labels (also known as\n    \\textit{application names}). This is the default sorting preference\n    \\item \\textbf{Package name.} Sort the list in ascending order based on their package names\n    \\item \\textbf{Last update.} Sort the list in descending order based on the date they were last updated\n    \\item \\textbf{Shared user ID.} Sort the list in descending order based on their kernel user ID\n    \\item \\textbf{Target SDK.} Sort the list in ascending order based on their target SDK\n    \\item \\textbf{Signature.} Sort the list in ascending order based on their signing information\n    \\item \\textbf{Frozen first.} The frozen applications are listed on the top\n    \\item \\textbf{Blocked first.} Sort the list in descending order based on the number of blocked components each\n    application has\n    \\item \\textbf{Backed up first.} Display the applications with backups on the top\n    \\item \\textbf{Trackers.} Sort the list in descending order based on the number of tracker components each\n    application has\n    \\item \\textbf{Last actions.} Sort the list in descending order based on the latest time and date of any actions made\n    to the applications within App Manager.\n    \\item \\textbf{Installation date.} Sort the list by the date of installation in descending order.\n    \\item \\textbf{Total size.} Sort the list by the total size of the apps and their data in descending order. Requires \\texttt{Usage Access} permission.\n    \\item \\textbf{Data usage.} Sort the list by the total data usage in descending order. Requires \\texttt{Usage Access} permission.\n    \\item \\textbf{Times opened.} List frequently used apps on top. Requires \\texttt{Usage Access} permission.\n    \\item \\textbf{Screen time.} List apps with highest engagements on top. Requires \\texttt{Usage Access} permission.\n    \\item \\textbf{Last used.} List last used apps on top. Requires \\texttt{Usage Access} permission.\n\\end{itemize}\n\nIn addition, there is the \\textit{reverse} option that can be used to sort the list in the reverse order. Regardless of\nthe sorting preferences, the applications are sorted alphabetically at first in order to prevent producing any random\nsorting results.</string>
    <string name="pages$main-page$filter">The applications listed in the main page can be filtered in the following ways:\n\\begin{itemize}\n    \\item \\textbf{User apps.} List only the user applications\n    \\item \\textbf{System apps.} List only the system applications\n    \\item \\textbf{Frozen apps.} List only the frozen applications\n    \\item \\textbf{Apps with rules.} List the applications with one or more blocking rules\n    \\item \\textbf{Apps with activities.} List the applications with one or more activities\n    \\item \\textbf{Apps with backups.} List the applications with one or more backups\n    \\item \\textbf{Running apps.} List the applications that are currently running\n    \\item \\textbf{Apps with splits.} List the applications with one or more split APK files\n    \\item \\textbf{Installed apps.} List only the installed applications\n    \\item \\textbf{Uninstalled apps.} List only the uninstalled applications\n    \\item \\textbf{Apps without backups.} List the applications with no backups present.\n    \\item \\textbf{Apps with KeyStore.} List only the applications with Android KeyStore.\n    \\item \\textbf{Apps with SAF.} List only the applications with SAF access.\n    \\item \\textbf{Apps with SSAID.} List only the applications with a valid SSAID\\\@.\n\\end{itemize}\n\nUnlike sorting, it is possible to apply more than one filtering options at the same time. For example, the frozen user\napplications can be listed by selecting both \\textit{User apps} and \\textit{Frozen apps}. This can be particularly\nuseful for \\hyperref[subsec:batch-operations]{batch operations} where filtering the user applications may be necessary\nto carry out certain operations safely.</string>
    <string name="pages$main-page$profile_name">It is also possible to list the applications that are only present in a \\hyperref[sec:profiles-page]{profile}. This can\nbe useful for carrying out certain operations on a profile (e.g., uninstalling all the applications in a profile) that\ncannot be done via the \\hyperref[sec:profiles-page]{Profiles page}.</string>
    <string name="pages$main-page$instructions">Clicking on the \\textbf{User manual} opens the offline version of the App Manager user manual. It may also open the\nonline version if the corresponding feature split i.e.\\ \\texttt{feat\\_docs} is not installed, or if an WebView is not\npresent in the system to load the manual.</string>
    <string name="pages$main-page$1-click-ops">\\textbf{1-Click Ops} stands for the single-click operations. It opens the \\hyperref[sec:1-click-ops-page]{corresponding\npage} in a new activity.</string>
    <string name="pages$main-page$app-usage">App usage statistics such as \\textit{screen time}, \\textit{data usage} (both mobile and Wi-Fi), \\textit{the number of\ntimes an app was opened} can be accessed by clicking on the \\textbf{App Usage} option in the menu. However, it requires\nthe \\textit{Usage Access} permission. This menu item will not be listed if the usage access feature is disabled in\n\\hyperref[subsubsec:enable/disable-features]{settings}.</string>
    <string name="pages$main-page$system-config">This menu item opens a new page where various system configurations, blacklists/whitelists included in Android by the\nOEM, the vendor, the AOSP or the Magisk modules are displayed. It requires root. Therefore, this menu item will not be\nlisted if root permission is unavailable to App Manager.</string>
    <string name="pages$main-page$running-apps">This menu item opens a new page where a list of running applications or processes are displayed. It also displays the\ncurrent memory and cache (if available) usage. If root or ADB is not available to App Manager, it only displays itself\nin the recent versions of Android. The running applications or processes can also be force-stopped or killed within the\nresultant page. Logs for each process ID (PID) can also be viewed in the \\hyperref[subsubsec:log-viewer]{log viewer}.\nIn addition, it is also possible to carry out batch operations either by clicking on the icon or by long-clicking on an\nitem. Normal click on any items opens a dialog where a more detailed information is displayed.</string>
    <string name="pages$main-page$profiles">This menu item opens the \\hyperref[sec:profiles-page]{profiles page}. Profiles are a way to configure regularly used\ntasks. They can also be invoked via shortcuts.</string>
    <string name="pages$main-page$log-viewer">This menu item opens the log viewer page which can display and manage logs using the \\texttt{logcat} command. By\ndefault, this page can only display the activities of App Manager. However, it can display logs from all the\nprocesses if \\texttt{android.permission.READ\\_LOGS} is granted. This permission granted automatically if the current\n\\hyperref[subsec:mode-of-operation]{mode of operation} is either root or ADB\\\@.</string>
    <string name="pages$main-page$apk-updater">If the app \\href{https://github.com/rumboalla/apkupdater}{APK Updater} is installed in the system, it can be opened\ndirectly via this menu item. The option remains hidden if the app is not present in the system.</string>
    <string name="pages$main-page$termux">If the app \\href{https://github.com/termux/termux-app}{Termux} is installed in the system, the running session (or a\nnew session) can be opened directly via this menu item. The option remains hidden if the app is not present in the\nsystem.</string>
    <string name="pages$main-page$settings">This menu item opens the in-app \\hyperref[sec:settings-page]{Settings page}.</string>
    <string name="pages$app-details-page$$section-title">App Details Page</string>
    <string name="pages$app-details-page$$colour-codes-title">Colour Codes</string>
    <string name="pages$app-details-page$$app-info-tab-title">App Info Tab</string>
    <string name="pages$app-details-page$$app-info-general-information-title">General Information</string>
    <string name="pages$app-details-page$$tags-title">Tags</string>
    <string name="pages$app-details-page$$horizontal-action-panel-title">Horizontal Action Panel</string>
    <string name="pages$app-details-page$$app-info-options-menu-title">Options Menu</string>
    <string name="pages$app-details-page$$config-termux-title">Configuring Termux</string>
    <string name="pages$app-details-page$$component-tabs-title">Component Tabs</string>
    <string name="pages$app-details-page$$activities-title">Activities</string>
    <string name="pages$app-details-page$$servcies-title">Services</string>
    <string name="pages$app-details-page$$receivers-title">Receivers</string>
    <string name="pages$app-details-page$$providers-title">Providers</string>
    <string name="pages$app-details-page$$additional-features-for-rooted-phones-title">Additional Features for Rooted Phones</string>
    <string name="pages$app-details-page$$blocking-components-title">Blocking Components</string>
    <string name="pages$app-details-page$$blocking-trackers-title">Blocking Trackers</string>
    <string name="pages$app-details-page$$permission-tabs-title">Permission Tabs</string>
    <string name="pages$app-details-page$$app-ops-title">App Ops</string>
    <string name="pages$app-details-page$$uses-permissions-title">Uses Permissions</string>
    <string name="pages$app-details-page$$permissions-title">Permissions</string>
    <string name="pages$app-details-page$$signatures-tab-title">Signatures Tab</string>
    <string name="pages$app-details-page$$shared-libs-tab-title">Shared Libraries Tab</string>
    <string name="pages$app-details-page$$other-tabs-title">Other Tabs</string>
    <string name="pages$app-details-page$intro">\\textbf{App Details} page consists of 11 (eleven) tabs. It describes almost every bit of information an application\ncan have, including all attributes from its manifest, \\hyperref[ch:app-ops]{application operations}, signing\ninformation, libraries, and so on.</string>
    <string name="pages$app-details-page$colour-codes">List of colours used in this page, and their meaning:\n\\begin{itemize}\n    \\item \\colorbox{AMRed}{\\textcolor{black}{Red (day)}} / \\colorbox{AMDarkRed}{\\textcolor{white}{dark red (night)}}\n    -- Denotes any app ops or permissions having the dangerous flag, or any components blocked within App Manager\n\n    \\item \\colorbox{AMLightRed}{\\textcolor{black}{Light red (day)}} / \\colorbox{AMVeryDarkRed}{\\textcolor{white}{very\n    dark red (night)}} -- Denotes the components disabled outside of App Manager\n\n    \\begin{tip}{Note}\n        A component marked as disabled does not always mean that it is disabled by the user: It could also be disabled\n        by the system or marked as disabled in its manifest. The components of a disabled application are also\n        considered disabled by the system (and App Manager).\n    \\end{tip}\n\n    \\item \\colorbox{AMVividOrange}{\\textcolor{black}{Vivid orange (day)}} / \\colorbox{AMVeryDarkOrange}{\n        \\textcolor{white}{very dark orange (night)}} -- Denotes the tracker components\n\n    \\item \\colorbox{AMSoftMagenta}{\\textcolor{black}{Soft magenta (day)}} / \\colorbox{AMVeryDarkViolet}{\n        \\textcolor{white}{very dark violet (night)}} -- Denotes the running services.\n\\end{itemize}</string>
    <string name="pages$app-details-page$app-info-tab">\\textbf{App Info} tab contains general information about an application. It also lists many actions that can be\nperformed within this tab.</string>
    <string name="pages$app-details-page$app-info-general-information">The list below is in the same order as listed in the App Info tab.\n\\begin{itemize}\n    \\item \\textbf{Application Icon.} The application icon. If the application does not have an icon, the system default\n    icon will be displayed. It is also possible to verify the APK signature via SHA or MD5 sums stored in the clipboard\n    by simply clicking on it.\n\n    \\item \\textbf{Application Label.} The application label or the name of the application.\n\n    \\item \\textbf{Package Name.} The name of the application package. Clicking on the name stores it in the clipboard.\n\n    \\item \\textbf{Version.} The application version is divided into two parts. The first part is called \\textit{version\n    name}. The format of this part varies but often consists of multiple integers separated by dots. The second part\n    is called \\textit{version code}. It is enclosed by the first brackets. The version code is an integer used to\n    differentiate between application versions (since a version name can be unreadable to a machine). In general,\n    a new version of an application has higher version code than the old ones. For example, if \\texttt{123} and\n    \\texttt{125} are two version codes of an application, we can say that the latter is more updated than the former\n    because the version code of the latter is higher. Applications that serve different APK files for the same version\n    on different platforms (mobile, tabs, desktops, etc.) or architectures (32/64 bit, ARM or Intel), the version\n    numbers can be misleading as they often add prefixes for each platform.\n\n    \\item \\textbf{Tags.} (Also known as tag clouds) Tags include the most basic, concise and useful information of an\n    application. See \\Sref{subsubsec:tags} for a complete list of tags shown here.\n\n    \\item \\textbf{Horizontal Action Panel.} An action panel consisting of various actions that can be carried out for\n    the application. See \\Sref{subsubsec:horizontal-action-panel} for a complete list of actions available here.\n    Additional actions are available in the \\hyperref[subsubsec:app-info-options-menu]{options menu}.\n\n    \\item \\textbf{Paths \\&amp; Directories.} Contains various information regarding application paths including \\textit{app\n    directory} (where the APK files reside), \\textit{data directories} (internal, device protected and externals),\n    \\textit{split APK directories} (along with the split names), and \\textit{native JNI library} (if present). JNI\n    libraries are used to invoke native codes usually written in C/C++. Use of native library can make the application\n    run faster or help an application use third-party libraries written using languages other than Java like in most\n    games. The directories can be opened via third-party file managers provided they support it and have the necessary\n    permissions by clicking on the launch button on the right-hand side of each directory item.\n\n    \\item \\textbf{Data Usage.} Amount of data used by the application as reported by the operating system. Depending on\n    Android version, this may require a wide range of permissions including \\textit{Usage Access} and \\textit{Telephony}\n    permissions.\n\n    \\item \\textbf{Storage \\&amp; Cache.} Displays information regarding the size of the application (APK files, optimised\n    files), data and cache. In older devices, size of external data, cache, media and OBB folders are also displayed.\n    This part remains hidden if\\textit{Usage Access} permission is not granted in newer devices.\n\n    \\item \\textbf{More Info.} Displays other information such as--\n    \\begin{itemize}\n        \\item \\textbf{SDK.} Displays information related to the Android SDK. There are two (one in old devices) values:\n        \\textit{Max} denotes the target SDK and \\textit{Min} denotes the minimum SDK (the latter is not available in old\n        devices). It is best practice to use applications with maximum SDK that the platform currently supports in order\n        to ensure that the application is not running in the compatibility mode in order to use privacy-evading features.\n        SDK is also known as \\textbf{API Level}.\\\\\n        \\seealsoinline{\\href{https://en.wikipedia.org/wiki/Android_version_history\\#Overview}{Android Version History}}\n\n        \\item \\textbf{Flags.} The application flags used at the time of building the application. For a complete list of\n        flags and what they do, visit the\n        \\href{https://developer.android.com/reference/android/content/pm/ApplicationInfo\\#flags}{official documentation}.\n\n        \\item \\textbf{Date Installed.} The date when the application was first installed.\n\n        \\item \\textbf{Date Updated.} The date when the application was last updated. This is the same as \\textit{Date Installed}\n        if the application hasn\'t been updated.\n\n        \\item \\textbf{Installer App.} The application that installed this application. Not all application supply the information used by the\n        package manager to register the installer application. Therefore, this value should not be taken for granted.\n\n        \\item \\textbf{User ID.} The unique user ID set by the Android system to the application. For shared applications, same\n        user ID is assigned to multiple applications that have the same \\textit{Shared User ID}.\n\n        \\item \\textbf{Shared User ID.} Applicable for applications that are shared together. The shared application must\n        have the same \\hyperref[subsec:signatures-tab]{signatures}.\n\n        \\item \\textbf{Primary ABI.} Architecture supported by this platform for this application.\n\n        \\item \\textbf{Zygote preload name.} Responsible for preloading application code and data shared across all the\n        isolated services that uses app zygote.\n\n        \\item \\textbf{Hidden API enforcement policy.} Since Android 9, many methods and classes in Android framework\n        have been made inaccessible to the third-party applications through hidden API enforcement policy. It has the\n        following options:\n        \\begin{itemize}\n            \\item \\textit{Default.} Based on the type of application. For system applications, it should be disabled,\n            and for others, it should be enforced.\n            \\item \\textit{None/disabled.} The application has full access to the hidden API as it used to be before\n            Android 9.\n            \\item \\textit{Warn.} Same as above, except that warnings will be logged each time the application accesses\n            the hidden API. This is mostly unused.\n            \\item \\textit{Enforce.} The application cannot access hidden API, either dark-grey list or blacklist, or\n            both of them. This is the default option for the third-party applications in Android 9 and later unless the\n            application is whitelisted by the OEM or the vendor.\n            \\begin{warning}{Warning}\n                Hidden API enforcement policy is not properly implemented in Android and can be bypassed by the\n                application. As a result, this value should not be trusted.\n            \\end{warning}\n        \\end{itemize}\n\n        \\item \\textbf{SELinux.} Mandatory access control (MAC) policy set by the operating system via SELinux.\n\n        \\item \\textbf{Main Activity.} The main entry point to the application. This is only visible if the application has\n        \\hyperref[subsubsec:activities]{activities} and any of those are openable from the Launcher. There\'s also a\n        launch button on the right-hand side which can be used to launch this activity.\n    \\end{itemize}\n\\end{itemize}</string>
    <string name="pages$app-details-page$tags-list">\\begin{itemize}\n    \\item \\textbf{Tracker info.} Number of tracker components in the application (e.g., \\textit{5 trackers}) The colour\n    of the tag appears orange if the trackers are unblocked and dark cyan if they are blocked in App Manager.\n    Clicking on the tag opens a dialog containing the list of tracker components which can be blocked or unblocked if\n    App Manager has sufficient privileges.\n\n    \\item \\textbf{Application type.} User application or system application. If it is a system application, whether\n    the application is an updated version of the system application or if the application is installed systemless-ly\n    via Magisk.\n\n    \\item \\textbf{Split APK info.} Number of splits in the APK excluding the base APK (e.g., \\textit{5 splits}).\n    Clicking on the tag opens a dialog containing the split APK information such as type and size.\n\n    \\item \\textbf{Debuggable.} The application can be debugged over ADB\\\@. Debuggable applications can enjoy certain\n    functions unavailable to a regular application. The data of the application might be accessible via ADB (e.g.\\ using\n    \\texttt{run-as} command) without any additional permissions.\n\n    \\item \\textbf{Test only.} The application is a test-only application. Test-only applications can enjoy certain\n    functions unavailable to a regular application. The data of the application might be accessible via ADB (e.g.\\ using\n    \\texttt{run-as} command) without any additional permissions.\n\n    \\item \\textbf{Large heap.} The application has requested large heap size i.e.\\ more space in memory (RAM) is\n    requested for dynamic allocation. It is still up to the operating system to decide whether to allocate large space\n    for the application. App Manager, for example, requests large heap size because it needs to load an entire APK\n    into memory while scanning an APK before Android 8.\n\n    \\item \\textbf{No code.} The application does not have any code associated with it i.e.\\ DEX files aren\'t present.\n    In some system applications, the actual code might be located in another place.\n\n    \\item \\textbf{Running.} One or more services of the application is currently running in the background. Clicking\n    on the tag opens a dialog containing the list of running services. Clicking on any services opens it in the log\n    viewer provided the log viewer feature is enabled. There\'s also an option to force-stop the application.\n\n    \\item \\textbf{Stopped.} The application is force stopped. This may not prevent it from running automatically later.\n\n    \\item \\textbf{Disabled.} Denotes that the application is disabled (hidden from the launcher).\n\n    \\item \\textbf{Suspended.} Denotes that the application is suspended (grayed out in the launcher).\n\n    \\item \\textbf{Hidden.} Denotes that the application is hidden (hidden from the launcher).\n\n    \\item \\textbf{MagiskHide.} MagiskHide is enabled. Clicking on the tag opens a dialog containing the list of\n    processes within the application that can be added or removed from the MagiskHide list.\n\n    \\item \\textbf{MagiskDenyList.} The application is present in MagiskDenyList. Clicking on the tag opens a dialog\n    containing the list of processes within the application that can be added or removed from MagiskDenyList.\n\n    \\item \\textbf{WX.} The app violates ``W\\textasciicircum{}X policy\'\' and is capable of writing and executing in the same directory or\n    in the same portion of memory. This allows the execution of arbitrary executables either by the modification of\n    executables embedded within the app or by downloading them from the Internet.\\\\\n    \\seealsoinline{\\href{https://en.wikipedia.org/wiki/W\\%5EX}{W\\textasciicircum{}X in Wikipedia}}\n\n    \\item \\textbf{KeyStore.} The application has items in the Android KeyStore. Clicking on the tag opens a dialog\n    containing all the KeyStore files that belong to the application.\n\n    \\item \\textbf{Backup.} The application was backed up using App Manager at least once. Clicking on the tag\n    opens a dialog containing all the available backups along with metadata.\n\n    \\item \\textbf{No battery optimisation.} Battery optimisation is disabled for the application. It is possible to\n    re-enable battery optimisation by clicking on the tag.\n\n    \\item \\hyperref[sec:net-policy]{\\textbf{Net policy.}} Network policy (e.g., background data usage) is configured\n    for the application. Clicking on the tag displays a dialog containing the supported policies for the platform\n    along with the options to configure them.\n\n    \\item \\hyperref[sec:terminologies]{\\textbf{SSAID.}} Clicking on the tag opens a dialog containing the current\n    SSAID assigned to the application. It is also possible to reset/regenerate the SSAID if needed.\n\n    \\item \\textbf{SAF.} Denotes that the application has been granted to access one or more storage locations or\n    files i.e.\\ URIs via Storage Access Framework (SAF). Clicking on the tag opens a dialog containing the list of\n    granted URIs.\n\n    \\item \\textbf{Play App Signing.} Indicates that the application might be signed by Google.\n\\end{itemize}</string>
    <string name="pages$app-details-page$horizontal-action-panel">Horizontal Action Panel, as described in the previous section, consists of various application-related actions, such as--\n\\begin{itemize}\n    \\item \\textbf{Launch.} Launch the application provided it has a launcher \\hyperref[subsubsec:activities]{activity}.\n\n    \\item \\textbf{Freeze.} Freeze the application. This button is not displayed if it is already frozen or the user\n    does not have enough privileges. After the application is frozen, it may be hidden from the app drawer depending on\n    how it was configured. Shortcuts configured by the application may also be removed. The application may only be\n    unfrozen via App Manager, \\texttt{pm} command or any other tools that offer such a feature. Long clicking on the\n    button opens a dialog where a shortcut can be configured to quickly freeze or unfreeze the application.\n\n    \\item \\textbf{Uninstall.} Uninstall the application with a prompt. In the dialog prompt, it is possible to uninstall\n    updates of a system application, or if App Manager has enough privileges or the operating system supports it, it is\n    possible to uninstall the application without clearing its data and signature. For the latter case, the installed\n    application must match the signature with the previously installed application if it is installed again.\n    \\begin{tip}{Tips}\n        A better way to reinstall an application with a different signature would be to back up its data using App\n        Manager and restore it again after installing the application instead of opting to preserving data and signature\n        of the application during uninstallation as this option may cause undefined behaviour in the future.\n    \\end{tip}\n\n    \\item \\textbf{Unfreeze.} Unfreeze the application. This button is not displayed if it is already enabled or the user\n    does not have enough privileges. Similar to the \\textit{Freeze} button, long clicking on the button opens a dialog\n    where a shortcut can be configured to quickly freeze or unfreeze the application.\n\n    \\item \\textbf{Force Stop.} Force-stop the application.\n\n    \\item \\textbf{Clear Data.} Clear data from the application. This includes any information stored in the internal\n    and, recently, the external directories, including accounts (if set by the application), cache, etc. Clearing data\n    from App Manager, for example, removes all the rules (the blocking is not removed though) saved within the\n    application (Which is why you should always take backups of your rules). This button is not displayed if the user\n    does not have enough privileges.\n\n    \\item \\textbf{Clear Cache.} Clear the application cache. If the application is running during the operation, the\n    cache may not be cleared as expected.\n\n    \\item \\textbf{Install.} Action to install an application opened via a third-party application. This button is only\n    displayed if the application hasn\'t been already installed.\n\n    \\item \\textbf{What\'s New.} This button is displayed for an external application if it\'s already been installed.\n    Clicking on this button displays a dialog consisting of differences between the opened version and the installed\n    version in a version control manner. The information it displays include \\textit{version}, \\textit{trackers},\n    \\textit{permissions}, \\textit{components}, \\textit{signatures} (checksum changes), \\textit{features},\n    \\textit{shared libraries} and \\textit{SDK}.\n\n    \\item \\textbf{Update.} Displayed if the application has a higher version code than the installed application.\n\n    \\item \\textbf{Reinstall.} Displayed if the application has the same version code as the installed application.\n\n    \\item \\textbf{Downgrade.} Displayed if the application has a lower version code than the installed application.\n\n    \\item \\textbf{Manifest.} Clicking on this button displays the application\'s manifest file in a separate page. The\n    manifest file can be wrapped or unwrapped using the corresponding toggle button (on the top-right side) or can be\n    exported using the save button.\n\n    \\item \\textbf{Scanner.} Scan the application in order to list potential trackers and libraries. It also scans the\n    file using VirusTotal if configured.\\\\\n    \\seealsoinline{\\hyperref[sec:scanner-page]{Scanner page}}\n\n    \\item \\textbf{Shared Prefs.} Clicking on this button displays a list of shared preferences used by the application.\n    Clicking on a preference item in the list opens the \\hyperref[sec:shared-preferences-editor-page]{Shared Preferences\n    Editor page}. This option is only visible if the user has the required privileges.\n\n    \\item \\textbf{Databases.} Clicking on this button displays a list of databases used by the application. Clicking on\n    an item opens a list of activities that can open the database. This option is only visible if the user has the\n    required privileges.\n\n    \\item \\textbf{F-Droid.} Open the application in the selected \\textit{F-Droid} client.\n\n    \\item \\textbf{Store.} Open the application in \\textit{Aurora Store}. The option is only visible if \\textit{Aurora\n    Store} is installed.\n\\end{itemize}</string>
    <string name="pages$app-details-page$app-info-options-menu">Options-menu is located in the top-right corner of the page. A complete description of the options present there are\ngiven below:\n\\begin{itemize}\n    \\item \\textbf{Share.} Share button can be used to share the APK or (if the application is has multiple splits, OBB\n    files or any dependencies) \\textit{APKS} file extracted from the application.\n\n    \\item \\textbf{Refresh.} Refresh the App Info tab.\n\n    \\item \\textbf{View in Settings.} Open the application in Android Settings.\n\n    \\item \\textbf{Backup/restore.} Open the backup/restore dialog.\n\n    \\item \\textbf{Export blocking rules.} Export rules configured for the application within App Manager.\n\n    \\item \\textbf{Open in Termux.} Open the application in Termux. This actually runs \\texttt{su - user\\_id} where\n    \\texttt{user\\_id} denotes the application\'s kernel user ID (described in \\Sref{subsubsec:app-info-general-information}).\n    This option is only visible to the root users. See \\Sref{subsubsec:config-termux} to learn how to configure Termux\n    to run commands from third-party applications.\n\n    \\item \\textbf{Run in Termux.} Open the application via \\texttt{run-as package\\_name} in Termux. This is only\n    applicable to the debuggable applications and works for both root and ADB users. See \\Sref{subsubsec:config-termux}\n    to learn how to configure Termux to run commands from third-party applications.\n\n    \\item \\textbf{MagiskHide.} Open a dialog containing the list of processes within the application that can be added\n    or removed from the MagiskHide list.\n\n    \\item \\textbf{Magisk DenyList.} Open a dialog containing the list of processes within the application that can be\n    added or removed from Magisk DenyList.\n\n    \\item \\textbf{Battery optimisation.} Enable/disable battery optimisation.\n\n    \\item \\hyperref[sec:net-policy]{\\textbf{Net policy.}} Configure network policy (e.g., background data usage) for the\n    application.\n\n    \\item \\textbf{Extract Icon.} Extract and save the application\'s icon in the shared storage.\n\n    \\item \\textbf{Add to profile.} Add the application to one of the configured \\hyperref[sec:profile-page]{profiles}.\n\n    \\item \\textbf{Install for….} Install the application for another user and/or in the work profile if configured.\n\\end{itemize}</string>
    <string name="pages$app-details-page$config-termux">By default, Termux does not allow running commands from third-party applications. To use this option, Termux v0.96 or\nlater is required and \\texttt{allow-external-apps=true} must be added in \\texttt{\\textasciitilde/.termux/termux.properties}.\n\n\\begin{tip}{Info}\n    Enabling this option does not weaken Termux\' security. The third-party applications still need to ask the user to\n    allow running arbitrary commands in Termux.\n\\end{tip}</string>
    <string name="pages$app-details-page$component-tabs">\\textbf{Activities}, \\textbf{Services}, \\textbf{Receivers} (i.e. broadcast receivers) and \\textbf{Providers}\n(i.e. content providers) are collectively known as the application components. This is because they share\nsimilar features in many ways. For example, they all have a \\textit{name}, a \\textit{label}, an \\textit{icon} and are\nexecuted via \\textit{Intent}. Application components are the building blocks of an application and must be declared in\nthe application manifest. Application manifest is a file where application specific metadata are stored. The Android\noperating system learns what to do with the application by reading the metadata.\n\nColours used in these tabs are explained in \\Sref{subsec:app-details-colour-codes}. It is also possible to sort the list\nof components to display blocked or tracker components on top of the list via the \\textbf{Sort} option located in the\noverflow menu.</string>
    <string name="pages$app-details-page$activities">\\textbf{Activities} are the windows or pages that can be uniquely identified by the Android operating system (e.g.,\n\\textit{Main page} and \\textit{App Details page} are two activities). Each activity can have multiple UI components\nknown as \\textit{widgets} or \\textit{fragments}, and each component can be nested or placed on top of each other. The\ndeveloper can also choose to open external files, links, etc. within an activity using a method called\n\\textit{intent filters}. For example, when you open a file using your file manager, either your file manager or\noperating system scans the intent filters via PackageManager to find the activities capable of opening the file and\noffers you to open the file with these activities.\n\nActivities which are \\textit{exportable} can usually be opened by any third-party applications. Some activities require\npermissions, and if that is the case, only an application having those permissions can open them. In the\n\\textit{Activities} tab, activities can be launched via the \\textbf{Launch} button. If it is necessary to supply\nadditional information such as Intent extras, data or action, long clicking on the \\textbf{Launch} button opens the\n\\hyperref[sec:interceptor-page]{Activity Interceptor} page which provides such features.\n\n\\begin{tip}{Notice}\n    If you are unable to open any activity, chances are it has certain dependencies which are not met, e.g.\\ you\n    cannot open \\textit{App Details} page because it requires you to, at least, supply a package name. Since these\n    dependencies cannot be inferred programmatically, these activities may not be opened via App Manager by default.\n\\end{tip}\n\nIt is also possible to create shortcuts of the activities via the \\textbf{Create shortcut} button.\n\n\\begin{danger}{Caution}\n    If you uninstall App Manager, all shortcuts created by App Manager will be lost.\n\\end{danger}</string>
    <string name="pages$app-details-page$servcies">Unlike \\hyperref[subsubsec:activities]{activities} that users can see, \\textbf{Services} handle background tasks. For example,\nif you\'re downloading a video from the internet using your phone\'s Internet browser, the Internet browser is using a\n\\textit{foreground service} to download the content.\n\nWhen an activity is closed or removed from the \\textit{Recents} section, it may be destroyed immediately depending on\nmany factors such as how much free memory the phone has. But services can be run indefinitely if desired. If more\nservices are run in background, the phone may become slower due to the shortage of memory and/or processing power, and\nthe phone\'s battery will be drained more quickly. Newer Android versions have a battery optimisation feature enabled\nby default for all applications. With this feature enabled, the system can randomly terminate any service. However,\nforeground services (i.e.\\ services that run with a fixed notification such as music player) are not typically\nterminated unless the system is low on resources (memory, battery, etc.). Vendor-specific stock ROMs can offer more\naggressive optimisation. MIUI, for example, has a very aggressive optimisation feature known as \\textit{MIUI optimisation}.\n\nBoth activities and services are run in the same \\href{https://stackoverflow.com/questions/7597742}{looper} called\nthe main looper, which means the services are not really run in the background. It is the task of the developer to\nensure this. How do the application communicate with the service\? It uses\n\\hyperref[subsubsec:app-details-receivers]{broadcast receiver} or Binder.</string>
    <string name="pages$app-details-page$receivers">\\textbf{Receivers} (also called \\textit{broadcast receivers}) can be used to trigger execution of certain tasks when\ncertain events occur. These components are called broadcast receivers because they are executed as soon as a broadcast\nmessage is received. These broadcast messages are sent using a method called \\textit{Intent}. Intent is a special\nfeature in Android that can be used to open applications (i.e.\\ activities), run services and send broadcast messages.\nTherefore, like \\hyperref[subsubsec:activities]{activities}, broadcast receivers use \\textit{intent filters} to receive\nthe desired broadcast messages. Broadcast messages can be sent by the system or the application itself. When a broadcast\nmessage is sent, the corresponding receivers are activated by the system so that they can execute tasks. For example, if\nyour phone is low on resources, it may freeze or experience lags for a moment after you enable mobile data or connect it\nto the Wi-Fi. This is because broadcast receivers that can receive \\texttt{android.net.conn.CONNECTIVITY\\_CHANGE} are\nactivated by the system as soon as the data connection is enabled. Since many applications typically use this intent\nfilter, they are all activated almost immediately by the system which causes the freezing or lags.\n\nReceivers can also be used for inter-process communication (IPC), i.e.\\ it can be used to communicate acrosss multiple\napplications or even different components of a single application.</string>
    <string name="pages$app-details-page$providers">\\textbf{Providers} (also called \\textit{content providers}) are used for data management. For example, when you save an\nAPK file or export rules in App Manager, it uses a content provider called \\texttt{.fm.FmProvider} to save the APK or\nexport the rules. There are many content providers, including the ones provided by the system, to manage various\ncontent-related tasks such as database management, tracking, searching, etc. Each content provider has a field called\n\\textit{Authority} which is unique to the application in the entire Android ecosystem just as the package name.</string>
    <string name="pages$app-details-page$additional-features-for-rooted-phones">Unlike the no-root users who are mostly spectators in these tabs, root users can perform various operations.</string>
    <string name="pages$app-details-page$blocking-components">On the right-most side of each component item, there is a switch which can be used to toggle the blocking status of that\nparticular component. If \\hyperref[subsubsec:instant-component-blocking]{Instant Component Blocking} is not enabled or\nblocking is never applied to the application before, it is required to apply the changes using the \\textbf{Apply rules}\noption in three-dots menu. It is also possible to remove the already-applied rules using the same option (which would be\nread as \\textbf{Remove rules} this time).\n\nIt is also possible to block the component using one of the several methods by long clicking on the button.\n\n\\seealsoinline{\\hyperref[sec:faq:app-components]{FAQ: App Components}}</string>
    <string name="pages$app-details-page$blocking-trackers">It is possible to disable tracker components using the \\textbf{Block tracker} option in the three-dots menu. All tracker\ncomponents will be blocked regardless of the tab you\'re currently in.\n\n\\begin{tip}{Info}\n    Tracker components are a subset of application components. Therefore, they are blocked using the same method used\n    for blocking any other components.\n\\end{tip}\n\n\\begin{amseealso}\n    \\item \\hyperref[subsec:tracker-classes-versus-tracker-components]{FAQ: Tracker classes versus tracker components}\n    \\item \\hyperref[sec:scanner-page]{Scanner Page}\n    \\item \\hyperref[subsec:block-unblock-trackers]{1-Click Ops Page: Block/Unblock Trackers}\n\\end{amseealso}</string>
    <string name="pages$app-details-page$permission-tabs">\\textbf{App Ops}, \\textbf{Uses Permissions} and \\textbf{Permissions} tabs are related to permissions. In Android\ncommunication across applications or processes which do not have the same identity (known as \\textit{shared ID}) often\nrequire permissions. These permissions are managed by the permission controller. Some permissions are considered\n\\textit{normal} permissions which are granted automatically if they appear in the application manifest, but\n\\textit{dangerous} and \\textit{development} permissions require confirmation from the user. Colours used in these tabs\nare explained in \\Sref{subsec:app-details-colour-codes}.</string>
    <string name="pages$app-details-page$app-ops">\\textbf{App Ops} stands for \\textbf{Application Operations}. Since Android 4.3, \\textit{App Ops} are used by Android to\ncontrol many system permissions. Each app op has a unique number associated with it which is displayed along with the\nprivate name of the operation in the App Ops tab. Some app ops also have a public name. A large number of app ops are\nalso associated with \\textit{permissions}. In this tab, an app op is considered dangerous if its associated permission\nis marked as dangerous. Other information such as \\textit{flags}, \\textit{permission name}, \\textit{permission description},\n\\textit{package name}, \\textit{group} are also taken from the associated \\hyperref[subsubsec:permissions]{permission}.\nOthers may include the following:\n\\begin{itemize}\n    \\item \\textbf{Mode.} It describes the current authorisation status which can be \\textit{allow}, \\textit{deny} (a\n    rather misnomer, it simply means error), \\textit{ignore} (it actually means deny), \\textit{default} (inferred from\n    a list of defaults set internally by the vendor or the AOSP), \\textit{foreground} (in newer Android versions, it\n    means the app op can only be used when the application is running in foreground), and some custom modes set by the\n    vendors (MIUI uses \\textit{ask}, for example).\n\n    \\item \\textbf{Duration.} The amount of time this application op has been used (there can be negative durations whose\n    use cases are currently unknown to me).\n\n    \\item \\textbf{Accept Time.} Last time the app op was accepted.\n\n    \\item \\textbf{Reject Time.} Last time the app op was rejected.\n\\end{itemize}\n\n\\begin{tip}{Info}\n    Contents of this tab are visible to no-root users if \\texttt{android.permission.GET\\_APP\\_OPS\\_STATS} is granted via ADB\\\@.\n\\end{tip}\n\nThere is a toggle button next to each app op item which can be used to allow or deny (ignore) it. Other supported modes\ncan also be set by long clicking on the toggle button. If the desired app op is not listed in the tab,\n\\textit{Set custom app op} option in the menu can be used instead. It is also possible to reset the changes\nusing the \\textit{Reset to default} option, or deny all the dangerous app ops using the corresponding option in the menu.\nDue to the nature how app ops work, the system may take some time to apply them.\n\n\\begin{tip}{Tip}\n    Denying certain app ops may cause the application to misbehave. If all attempts fail, \\textit{reset to default}\n    option can be used as the last resort.\n\\end{tip}\n\nIt is possible to sort the list in ascending order by app op names and the associated unique numbers (or values), or\nlist the denied app ops first using the corresponding sorting options.\n\n\\seealsoinline{\\hyperref[ch:app-ops]{Appendix: App Ops}}</string>
    <string name="pages$app-details-page$uses-permissions">\\textbf{Uses Permissions} are the permissions used by the application. This is named so because they are specified in\nthe manifest using \\texttt{uses-permission} tags. Information such as \\textit{flags}, \\textit{permission name},\n\\textit{permission description}, \\textit{package name}, \\textit{group} are taken from the associated\n\\hyperref[subsubsec:permissions]{permission}.\n\nPrivileged users can grant or revoke the \\textit{dangerous} and \\textit{development} permissions via the toggle button\non the right side of each permission item. It is also possible revoke dangerous permissions all at once using the\ncorresponding option in the menu. Only these two types of permissions can be revoked because Android does not allow\nthe modification of \\textit{normal} permissions (which most of them are). It might still be possible to revoke them\nby editing \\texttt{runtime-permissions.xml} itself, but whether this is a possibility is still being investigated.\n\n\\begin{tip}{Info}\n    Since dangerous permissions are revoked by default by the system, revoking all dangerous permissions is the same as\n    resetting all the permissions.\n\\end{tip}\n\nIt is possible to sort the permissions by their name (in ascending order) or choose to display denied or dangerous\npermissions at first using the corresponding options in the menu.</string>
    <string name="pages$app-details-page$permissions">\\textbf{Permissions} are usually custom permissions defined by the application itself. These type of permissions are\nmarked as \\textit{Internal} permissions. It also contains permissions declared in other applications which are marked as\n\\textit{External} permissions. External permissions are specified in the application components as the dependencies i.e.\nan application may invoke the component only if holds the specified permission. Here\'s a complete description of each\nitem that is displayed there:\n\\begin{itemize}\n    \\item \\textbf{Name.} Each permission has a unique name like \\texttt{android.permission.INTERNET} but multiple\n    applications can request the same permission.\n\n    \\item \\textbf{Icon.} Each permission can have a custom icon. The other permission tabs do not have any icon because\n    they do not contain any icon in the application manifest.\n\n    \\item \\textbf{Description.} This optional field describes the permission. If there isn\'t any description associated\n    with the permission, the field is not displayed.\n\n    \\item \\textbf{Flags.} (Uses the flag symbol or \\textbf{Protection Level} name) This describes various permission\n    flags such as \\textit{normal}, \\textit{development}, \\textit{dangerous}, \\textit{instant}, \\textit{granted},\n    \\textit{revoked}, \\textit{signature}, \\textit{privileged}, etc.\n\n    \\item \\textbf{Package Name.} Denotes the package name associated with the permission, i.e.\\ the package that defined\n    the permission.\n\n    \\item \\textbf{Group.} The group name associated with the permission (if any). Several related permissions can often\n    be grouped together.\n\\end{itemize}</string>
    <string name="pages$app-details-page$signatures-tab_1">\\textbf{Signatures} are actually called signing information. An application is signed using one or more signing\ncertificates by the application developers before publishing it. The integrity of an application i.e.\\ whether the\napplication is from the actual developer and isn\'t modified by other people can be checked using the signing information;\nbecause when an application is modified by an unauthorised entity, the application cannot be signed using the original\ncertificates again because the signing information are kept private by the actual developer. Signing information can be\nverified using checksums. Checksums are generated from the certificates themselves. If the developer supplies the\nchecksums for the signing certificates, they can be matched against the checksums generated in the \\textbf{Signatures}\ntab to verify the application. For example, if you have downloaded App Manager from GitHub or Telegram Channel, you can\nverify whether the application is actually released by me by simply matching the following \\textit{SHA256} checksum with\nthe one displayed in this tab:</string>
    <string name="pages$app-details-page$signatures-tab_2">Several hashing algorithms are used to generate checksums in this tab. They include \\textit{MD5}, \\textit{SHA1},\n\\textit{SHA256} and \\textit{SHA512}.\n\n\\begin{danger}{Caution}\n    Signing information should be verified using a reliable hashing algorithm such as \\textit{SHA256}. DO NOT rely on\n    \\textit{MD5} or \\textit{SHA1} checksums as they are known to generate the same checksums for multiple certificates.\n\\end{danger}</string>
    <string name="pages$app-details-page$shared-libs-tab">\\textbf{Shared libraries} tab lists all the legacy JAR dependencies as well as JNI (Java native interface) libraries.\nFor JNI libraries, it specifies platform (x86/x86\\_64/ARM/AArch64), architecture (32/64 bit), object type (shared object\nor executable), etc.</string>
    <string name="pages$app-details-page$other-tabs">Other tabs list android manifest components such as features and configurations. A complete description\nabout these tabs may be available in the future.</string>
    <string name="pages$one-click-ops-page$$section-title">1-Click Ops Page</string>
    <string name="pages$one-click-ops-page$$block-unblock-trackers-title">Block/Unblock Trackers</string>
    <string name="pages$one-click-ops-page$$block-components-dots-title">Block Components\\dots</string>
    <string name="pages$one-click-ops-page$$set-mode-for-app-ops-dots-title">Set Mode for App Ops\\dots</string>
    <string name="pages$one-click-ops-page$$1-click-back-up-title">Back up</string>
    <string name="pages$one-click-ops-page$$1-click-restore-title">Restore</string>
    <string name="pages$one-click-ops-page$$trim-caches-in-all-apps-title">Trim Caches in All Apps</string>
    <string name="pages$one-click-ops-page$intro">This page is displayed on selecting the \\hyperref[subsubsec:main:1-click-ops]{1-Click Ops option} in the \\hyperref[subsec:main-page-options-menu]{main menu}.</string>
    <string name="pages$one-click-ops-page$block-unblock-trackers">This option can be used to block or unblock the ad/tracker components from the installed applications.\nOn selecting this option, App Manager will ask if it should list trackers from all the applications or only from the user applications.\nNovice users should avoid blocking trackers from the system applications in order to avoid bad consequences.\nAfter that, a multi-choice dialog box will appear where it is possible to exclude one or more applications from this operation.\nThe changes are applied immediately on pressing the \\textit{block} or \\textit{unblock} button.\n\n\\begin{warning}{Notice}\n    Certain applications may not function as expected after blocking their trackers.\n    If that is the case, remove the blocking rules all at once or one by one in the component tabs of the \\hyperref[sec:app-details-page]{App Details page} for the corresponding application.\n\\end{warning}\n\n\\seealsoinline{\\hyperref[par:appdetails:blocking-trackers]{App Details Page: Blocking Trackers}}</string>
    <string name="pages$one-click-ops-page$block-components-dots">This option can be used to block certain application components as specified by their signatures.\nA signature of a component is the full name or partial name of the component.\nFor safety, it is recommended to add a \\texttt{.} (dot) at the end of each partial signature, because the underlying\nalgorithm searches and matches the components in a greedy manner.\nIt is also possible to insert more than one signature in which case all the signatures have to be separated by white spaces.\nSimilar to the option above, there is also an option to apply blocking to the system applications.\n\n\\begin{danger}{Caution}\n    If you are not aware of the consequences of blocking applcations components by their signatures, you should avoid\n    using this option as it may result in bootloop or soft brick, and you may have to apply factory reset as a result.\n\\end{danger}</string>
    <string name="pages$one-click-ops-page$set-mode-for-app-ops-dots">This option can be used to configure certain \\hyperref[ch:app-ops]{applcation operations} of all or selected applications.\nThere are two fields. The first field can be used to insert more than one app op constants (either names or values) separated by white spaces.\nIt is not always possible to know in advance about all the app op constants as they vary from device to device and from OS to OS\\\@.\nDesired app op constant can be found in the \\textit{App Ops} tab located in the \\hyperref[sec:app-details-page]{App Details page}.\nThe second field can be used to insert or select one of the \\hyperref[subsec:mode-constants]{modes} that will be set against the specified app ops.\n\n\\begin{danger}{Caution}\n    Unless you are well-informed about app ops and the consequences of blocking them, you should avoid using this option.\n\\end{danger}</string>
    <string name="pages$one-click-ops-page$back-up">1-Click options for back up. As a precaution, it lists the affected backups before performing any operation.\n\n\\paragraph{Back up all apps.} Back up all the installed applications.\n\n\\paragraph{Redo existing backups.} Back up all the installed applications that have a previous backup.\n\n\\paragraph{Back up apps without backups.} Back up all the installed applications without a previous backup.\n\n\\paragraph{Verify and redo backups.} Verify the recently made backups of the installed applications and redo backup if necessary.\n\n\\paragraph{Back up apps with changes.} If an app has changed since the last backup, redo its backup.\nIt checks a number of indices including application version, last update date, last launch date, integrity and file hashes.\nDirectory hashes are taken during the backup process and are stored in a database.\nOn running this operation, new hashes are taken and compared with the ones kept in the database.</string>
    <string name="pages$one-click-ops-page$restore">1-Click options for restore. As a precaution, it lists the affected backups before performing any operation.\n\n\\paragraph{Restore all apps.} Restore \\textit{base backup} of all the backed up applications.\n\n\\paragraph{Restore not installed apps.} Restore \\textit{base backup} of all the backed up applications that are not currently installed.\n\n\\paragraph{Restore latest backups.} Restore \\textit{base backup} of already installed applications whose version codes are higher than the installed version code.</string>
    <string name="pages$one-click-ops-page$trim-caches-in-all-apps">Delete caches from all applications, including Android system. During this operation, caches of all the running\napplications may not be cleared as expected.</string>
    <string name="pages$profiles-page$$section-title">Profiles Page</string>
    <string name="pages$profiles-page$$options-menu-title">Options Menu</string>
    <string name="pages$profiles-page$intro">Profiles page can be accessed from the \\hyperref[subsec:main-page-options-menu]{options-menu} in the main page.\nIt primarily displays a list of configured profiles along with the typical options to perform operations on them.\nNew profiles can also be added using the \\textit{plus} button in the bottom-right corner as well as can be imported,\nduplicated, or created from one of the presets. Clicking on any profile item opens its \\hyperref[sec:profile-page]{profile page}.</string>
    <string name="pages$profiles-page$options-menu">There are two options menu in this page. The three dots menu in the top-right corner offers two options:\n\\textit{presets} and \\textit{import}.\n\\begin{itemize}\n    \\item \\textbf{Presets.} This option lists a number of built-in profiles that can be used as a starting point.\n    The profiles are generated from the project \\href{https://gitlab.com/W1nst0n/universal-android-debloater}{Universal\n    Android Debloater}.\\\\\n    \\seealsoinline{\\hyperref[subsec:faq:what-are-bloatware]{FAQ: What are bloatware and how to remove them\?}}\n\n    \\item \\textbf{Import.} This option can be used to import an existing profile that was previously exported from App Manager.\n\\end{itemize}\n\nLong clicking on any profile item brings up another options-menu. It offers the following options:\n\\begin{itemize}\n    \\item \\textbf{Apply now\\dots.} This option can be used to apply the profile directly. When clicked, a dialog will be\n    displayed where it is possible to select a \\hyperref[subsubsec:profile-state]{profile state}.\n    On selecting one of the options, the profile will be applied immediately.\n\n    \\item \\textbf{Delete.} Clicking on delete will remove the profile immediately without any warning.\n\n    \\item \\textbf{Duplicate.} This option can be used to duplicate the profile. When clicked, a dialog will be\n    displayed where it is possible to set a name for the new profile. On clicking ``OK\'\', \\hyperref[sec:profile-page]{profile page}\n    will be loaded by duplicating all the configurations that this profile have. However, the profile will not be saved\n    until it is saved manually.\n\n    \\item \\textbf{Export.} Export the profile to an external storage. Profile exported this way can be imported via\n    the \\textit{import} option as mentioned above.\n\n    \\item \\textbf{Create shortcut.} This option can be used to create a shortcut for the profile. When clicked, there\n    will be two options: \\textit{Simple} and \\textit{Advanced}. When configured with the latter option, it prompts the\n    user to select a profile state when the shortcut is invoked. The former option, on the other hand, always uses the\n    default state that was configured when the profile was last saved.\n\\end{itemize}</string>
    <string name="pages$profile-page$$section-title">Profile Page</string>
    <string name="pages$profile-page$$options-menu-title">Options Menu</string>
    <string name="pages$profile-page$$apps-tab-title">Apps Tab</string>
    <string name="pages$profile-page$$configurations-tab-title">Configurations Tab</string>
    <string name="pages$profile-page$$comment-title">Comment</string>
    <string name="pages$profile-page$$state-title">State</string>
    <string name="pages$profile-page$$users-title">Users</string>
    <string name="pages$profile-page$$components-title">Components</string>
    <string name="pages$profile-page$$app-ops-title">App Ops</string>
    <string name="pages$profile-page$$permissions-title">Permissions</string>
    <string name="pages$profile-page$$backup-restore-title">Backup/Restore</string>
    <string name="pages$profile-page$$export-blocking-rules-title">Export Blocking Rules</string>
    <string name="pages$profile-page$$disable-title">Disable</string>
    <string name="pages$profile-page$$force-stop-title">Force-stop</string>
    <string name="pages$profile-page$$clear-cache-title">Clear Cache</string>
    <string name="pages$profile-page$$clear-data-title">Clear Data</string>
    <string name="pages$profile-page$$block-trackers-title">Block Trackers</string>
    <string name="pages$profile-page$$save-apk-title">Save APK</string>
    <string name="pages$profile-page$intro">Profile page displays the configurations for a profile. It also offers the options to edit them.</string>
    <string name="pages$profile-page$options-menu">The three dots menu in the top-right corner opens the options-menu. It contains several options such as--\n\\begin{itemize}\n    \\item \\textbf{Apply.} This option can be used to apply the profile. When clicked, a dialog will be displayed where\n    you can select a \\hyperref[subsubsec:profile-state]{profile state}. On selecting one of the options, the profile\n    will be applied immediately.\n    \\begin{tip}{Notice}\n        When you apply a profile, if some packages do not match the criteria, they will simply be ignored.\n    \\end{tip}\n\n    \\item \\textbf{Save.} Save changes to the profile.\n    \\begin{warning}{Notice}\n        Changes are never saved automatically. You have to save them manually from here.\n    \\end{warning}\n\n    \\item \\textbf{Discard.} Discard any modifications made since the last save operation.\n\n    \\item \\textbf{Delete.} Clicking on delete will remove the profile immediately without any warning.\n\n    \\item \\textbf{Duplicate.} This option can be used to duplicate the profile. When clicked, a dialog will be displayed\n    where it is possible to set a name for the new profile. On clicking ``OK\'\', this page will be reloaded by\n    duplicating all the configurations that this profile have. However, the profile will not be saved until it is saved manually.\n\n    \\item \\textbf{Create shortcut.} This option can be used to create a shortcut for the profile. When clicked, there\n    will be two options: \\textit{Simple} and \\textit{Advanced}. When configured with the latter option, it prompts the\n    user to select a profile state when the shortcut is invoked. The former option, on the other hand, always uses the\n    default state that was configured when the profile was last saved.\n\\end{itemize}</string>
    <string name="pages$profile-page$apps-tab">Apps tab lists the packages configured in this profile. Packages can be added or removed using the \\textit{plus}\nbutton located near the bottom of the screen. Packages can also be removed by long clicking on them (in which case, a\npopup will be displayed with the only option \\textit{delete}).</string>
    <string name="pages$profile-page$configurations-tab">Configurations tab can be used to configure the selected packages.</string>
    <string name="pages$profile-page$comment">This is the text that will be displayed in the \\hyperref[sec:profiles-page]{profiles page}. If not set, the current\nconfigurations will be displayed instead.</string>
    <string name="pages$profile-page$state">Denotes how certain configured options will behave by default. For instance, if \\textit{disable} option is turned on,\nthe applications will be disabled if the state is \\textit{on} and will be enabled if the state is \\textit{off}.\nCurrently, it only supports \\textit{on} and \\textit{off} values.</string>
    <string name="pages$profile-page$users">Select users for which is the profile will be applied. All users are selected by default.</string>
    <string name="pages$profile-page$components">This behaves the same way as the \\hyperref[subsec:block-components-dots]{Block Components\\dots} option does in the\n1-Click Ops page. However, the blocking here is only applied to the selected packages.\nIf the \\hyperref[subsubsec:profile-state]{state} is \\textit{on}, the components will be blocked,\nand if the state is \\textit{off}, the components will be unblocked.\nThe option can be disabled (regardless of the inserted values) by clicking on the \\textit{disabled} button on the input dialog.\n\n\\seealsoinline{\\hyperref[subsec:faq:what-are-app-components]{What are the app components\?}}</string>
    <string name="pages$profile-page$app-ops">This behaves the same way as the \\hyperref[subsec:set-mode-for-app-ops-dots]{Set Mode for App Ops\\dots} option does in\nthe 1-Click Ops page. However, the operation here is only applied to the selected packages.\nIf the \\hyperref[subsubsec:profile-state]{state} is \\textit{on}, the app ops will be denied (i.e.\\ ignored),\nand if the state is \\textit{off}, the app ops will be allowed. The option can be disabled (regardless of the inserted\nvalues) by clicking on the \\textit{disable} button in the input dialog.</string>
    <string name="pages$profile-page$permissions">This option can be used to grant or revoke certain permissions from the selected packages. Like others above,\npermissions must be separated by white spaces. If the \\hyperref[subsubsec:profile-state]{state} is \\textit{on}, the\npermissions will be revoked, and if the state is \\textit{off}, the permissions will be allowed. The option can be\ndisabled (regardless of the inserted values) by clicking on the \\textit{disable} button in the input dialog.</string>
    <string name="pages$profile-page$backup-restore">This option can be used to take a backup of the selected applications and its data or restore them.\nTwo options are available here: \\textit{Backup options} and \\textit{backup name}.\n\\begin{itemize}\n    \\item \\textbf{Backup options.} Same as the \\hyperref[subsec:backup-restore-backup-options]{backup options} of the\n    backup/restore feature. If not set, the default options will be used.\n    \\item \\textbf{Backup name.} Set a custom name for the backup. If the backup name is set, each time a backup is made,\n    it will be given a unique name with backup-name as the suffix. This behaviour will be fixed in a future release.\n    Leave this field empty for regular ``base\'\' backups (also, make sure not to enable \\textit{backup multiple} in the\n    backup options).\n\\end{itemize}\n\nIf the \\hyperref[subsubsec:profile-state]{state} is \\textit{on}, the packages will be backed up, and if the state is\n\\textit{off}, the packages will be restored. The option can be disabled by clicking on the \\textit{disable} button in\nthe input dialog.</string>
    <string name="pages$profile-page$export-blocking-rules">\\begin{danger}{Danger}\n    This option is not yet implemented.\n\\end{danger}</string>
    <string name="pages$profile-page$disable">Allow enabling or disabling the selected packages depending on the value of the \\hyperref[subsubsec:profile-state]{state}.\nIf the state is \\textit{on}, the packages will be disabled, and if the state is \\textit{off}, the packages will be enabled.</string>
    <string name="pages$profile-page$force-stop">Allow the selected packages to be force-stopped.</string>
    <string name="pages$profile-page$clear-cache">Enable clearing cache for the selected packages.</string>
    <string name="pages$profile-page$clear-data">Enable clearing data for the selected packages.</string>
    <string name="pages$profile-page$block-trackers">Enable blocking or unblocking of the tracker components from the selected packages depending on the value of the \\hyperref[subsubsec:profile-state]{state}.\nIf the state is \\textit{on}, the trackers will be blocked, and if the state is \\textit{off}, the trackers will be unblocked.</string>
    <string name="pages$profile-page$save-apk">Enable saving APK files at \\texttt{AppManager/apks} (or in the directory selected in the settings page) of the selected packages.</string>
    <string name="pages$settings-page$$section-title">Settings Page</string>
    <string name="pages$settings-page$$language-title">Language</string>
    <string name="pages$settings-page$$appearance-title">Appearance</string>
    <string name="pages$settings-page$$app-theme-title">App Theme</string>
    <string name="pages$settings-page$$layout-direction-title">Layout Direction</string>
    <string name="pages$settings-page$$enable-disable-features-title">Enable/Disable Features</string>
    <string name="pages$settings-page$$privacy-settings-title">Privacy</string>
    <string name="pages$settings-page$$screen-lock-title">Screen Lock</string>
    <string name="pages$settings-page$$mode-of-operation-title">Mode of Operation</string>
    <string name="pages$settings-page$$apk-signing-title">APK Signing</string>
    <string name="pages$settings-page$$signature-schemes-title">Signature Schemes</string>
    <string name="pages$settings-page$$signing-key-title">Signing Key</string>
    <string name="pages$settings-page$$installer-title">Installer</string>
    <string name="pages$settings-page$$show-users-in-installer-title">Show users in installer</string>
    <string name="pages$settings-page$$sign-apk-title">Sign APK</string>
    <string name="pages$settings-page$$install-location-title">Install Location</string>
    <string name="pages$settings-page$$installer-app-title">Installer App</string>
    <string name="pages$settings-page$$block-trackers-title">Block Trackers</string>
    <string name="pages$settings-page$$display-changes-title">Display Changes</string>
    <string name="pages$settings-page$$install-in-the-background-title">Install in the Background</string>
    <string name="pages$settings-page$$backup-restore-title">Back up/Restore</string>
    <string name="pages$settings-page$$compression-method-title">Compression method</string>
    <string name="pages$settings-page$$backup-options-title">Backup Options</string>
    <string name="pages$settings-page$$backup-apps-with-keystore-title">Backup apps with Android KeyStore</string>
    <string name="pages$settings-page$$encryption-title">Encryption</string>
    <string name="pages$settings-page$$backup-volume-title">Backup Volume</string>
    <string name="pages$settings-page$$import-backups-title">Import Backups</string>
    <string name="pages$settings-page$$rules-title">Rules</string>
    <string name="pages$settings-page$$instant-component-blocking-title">Instant Component Blocking</string>
    <string name="pages$settings-page$$import-export-blocking-rules-title">Import/Export Blocking Rules</string>
    <string name="pages$settings-page$$remove-all-rules-title">Remove all rules</string>
    <string name="pages$settings-page$$advanced-settings-title">Advanced</string>
    <string name="pages$settings-page$$selected-users-title">Selected Users</string>
    <string name="pages$settings-page$$saved-apk-name-format-title">Saved APK Name Format</string>
    <string name="pages$settings-page$$import-export-keystore-title">Import/Export Keystore</string>
    <string name="pages$settings-page$$device-info-title">About the device</string>
    <string name="pages$settings-page$intro">Settings page can be used to customise the behaviour of App Manager.</string>
    <string name="pages$settings-page$language">Configure in-app language. App Manager currently supports 22 (twenty-two) languages.</string>
    <string name="pages$settings-page$app-theme">Configure in-app theme.</string>
    <string name="pages$settings-page$layout-direction">Change layout direction, either left to right or right to left. This is usually set using the selected language but not\neverybody prefers the same direction.</string>
    <string name="pages$settings-page$enable-disable-features">Enable or disable certain features in App Manager, such as\n\\begin{itemize}\n    \\item \\textbf{Interceptor}\n    \\item \\textbf{Manifest viewer}\n    \\item \\textbf{Scanner}\n    \\item \\textbf{Package installer}\n    \\item \\textbf{Usage access.} With this feature turned off, App Manager will never ask for the \\textit{Usage Access} permission.\n    \\item \\textbf{Log viewer}\n    \\item \\textbf{App explorer.} The ``Explore\'\' option will not be available while trying to open an APK file.\n    \\item \\textbf{App info.} The ``App info\'\' option displayed while trying to open an APK file.\n    \\item \\textbf{Use the internet.} All the Internet features are disabled if this feature is turned off.\n    Currently, the only Internet feature is fetching scanning reports via VirusTotal.\n\\end{itemize}</string>
    <string name="pages$settings-page$screen-lock">Lock App Manager using Android screen lock provided a screen lock is configured.\n\n\\begin{warning}{Warning}\n    If screen lock is disabled in Android after enabling this setting, App Manager will not open until it is enabled again.\n\\end{warning}</string>
    <string name="pages$settings-page$mode-of-operation">Mode of operation defines how App Manager works as a whole. It has the following options:\n\\begin{itemize}\n    \\item \\textbf{Auto.} Let App Manager decide the suitable option.\n    Although this is the default option, non-rooted users should use the \\textit{no-root} mode.\n\n    \\item \\textbf{Root.} Operate App Manager in root mode. App Manager will fall back to \\textit{no-root} mode if root\n    is not detected, or in rare cases when Binder communication through root is disabled (e.g.\\ in \\href{https://github.com/MuntashirAkon/AppManager/issues/606}{Phh SuperUser}).\n\n    \\item \\textbf{ADB over TCP.} Operate App Manager in ADB mode via \\hyperref[sec:adb-over-tcp]{ADB over TCP}.\n    App Manager will fall back to \\textit{no-root} mode if ADB over TCP is not enabled.\n\n    \\item \\textbf{Wireless debugging.} Enable ADB via Wireless Debugging. It will try to connect to the configured port\n    automatically at first. On failure, it will ask the user to either pair or connect to the ADB daemon manually.\n    App Manager will fall back to \\textit{no-root} mode if it fails to connect to the ADB daemon this way.\n    \\begin{tip}{Info}\n        This option is only displayed in devices running Android 11 or later as Wireless Debugging was introduced in Android 11.\n    \\end{tip}\n\n    \\item \\textbf{No-root.} Operate App Manager in no-root mode. While App Manager performs better in this mode,\n    all the root- or ADB-specific features will be disabled.\n\\end{itemize}\n\nIt also displays the currently inferred mode of operation. The actual mode of operations are \\textit{root}, \\textit{ABD} and \\textit{no-root}.</string>
    <string name="pages$settings-page$signature-schemes">Configure the \\href{https://source.android.com/security/apksigning}{signature schemes} to be used when APK signing is enabled.\nv1 and v2 signature schemes are enabled by default, but v3 should also be enabled to ensure proper security in Android 9 or later.</string>
    <string name="pages$settings-page$signing-key">Configure the signing key for signing APK files. Keys from an existing KeyStore can be imported to App Manager,\nor a new key can be generated.\n\n\\begin{tip}{Tip}\n    If you need to use the key in the future, it is recommended that you create a KeyStore yourself and import the key\n    here. Keys generated within App Manager is at the risk of being deleted without a proper backup.\n\\end{tip}</string>
    <string name="pages$settings-page$show-users-in-installer">When enabled, a list of users will be displayed before installing the application. The application will be installed\nonly for the specified users.</string>
    <string name="pages$settings-page$sign-apk">Whether to sign the APK files before installing the application. A signing key has to be added or generated before this\noption can be enabled. This can be done in the \\hyperref[subsec:apk-signing]{APK signing} page.</string>
    <string name="pages$settings-page$install-location">Define APK installation location. This can be one of \\textit{auto}, \\textit{internal only} and \\textit{prefer external}.\nIn newer Android versions, selecting the last option does not guarantee that the application will be installed in the\nexternal storage.</string>
    <string name="pages$settings-page$installer-app">Select the installer application. This is useful for applications that explicitly checks the installer as a way to\nverify if the application is installed legitimately. This only works for root or ADB users.\n\n\\begin{tip}{Notice}\n    While checking for the installer might seem a legitimate concern for an application, the Android framework already\n    deals with this during the installation. Checking for the installer is simply the wrong way to prove the legitimacy\n    of the source of an application.\n\\end{tip}</string>
    <string name="pages$settings-page$block-trackers">Whether to block the tracking components immediately after installing the application.</string>
    <string name="pages$settings-page$display-changes">Whether to display changes in version, trackers, components, permissions, signatures, SDK, etc. in a version controlled\nstyle before installing the application if the application has already been installed.</string>
    <string name="pages$settings-page$install-in-the-background">Whether to always install applications in the background. A notification will be issued once the installation is finished.</string>
    <string name="pages$settings-page$backup-restore">Settings related to \\hyperref[sec:backup-restore]{back up/restore}.</string>
    <string name="pages$settings-page$compression-method">Set the compression method to be used during backups. App Manager supports GZip and BZip2 compression methods,\nGZip being the default compression method. It doesn\'t affect the restoring of an existing backup.</string>
    <string name="pages$settings-page$backup-options">Customise the \\textit{back up/restore dialog} displayed while taking a backup.\n\n\\seealsoinline{\\hyperref[subsec:backup-restore-backup-options]{Backup options}}</string>
    <string name="pages$settings-page$backup-apps-with-keystore">Allow backup of applications that has entries in the Android KeyStore. This option is disabled by default because\na few apps (such as Signal) may crash if restored.</string>
    <string name="pages$settings-page$encryption">Set an encryption method for the backups. App Manager currently supports OpenPGP (via\n\\href{https://f-droid.org/packages/org.sufficientlysecure.keychain/}{OpenKeyChain}), AES, RSA and ECC\\\@.\nLike \\hyperref[subsec:apk-signing]{APK signing}, The AES, RSA and ECC keys are stored in the KeyStore and can be\nimported from other KeyStores.\n\n\\begin{danger}{Danger}\n    For your own safety, it is not recommended generating RSA and ECC keys inside App Manager. Instead, they should be\n    imported from a KeyStore stored in a secure place.\\\\\n    In case of AES, the generated key should be stored in a secure place, such as using a password manager.\n\\end{danger}</string>
    <string name="pages$settings-page$backup-volume">Select the storage where the backups will be stored. This is also where logs and exported APK files are saved.\n\n\\begin{tip}{Notice}\n    The backup volume only specifies the storage, not the path. Backups are traditionally stored in the \\texttt{AppManager} folder inside the storage path.\n    But when the path is selected using Storage Access Framework (SAF), the selected path or directory is used directly.\n\\end{tip}</string>
    <string name="pages$settings-page$import-backups">Import backups from old and discontinued projects such as Titanium Backup, OAndBackup, and Swift Backup (version 3.0 to 3.2).\nThe backups are not deleted after importing to prevent data loss in case the imported backups cannot be restored properly.</string>
    <string name="pages$settings-page$instant-component-blocking">By default, blocking rules are not applied unless they are applied explicitly in \\hyperref[sec:app-details-page]{the App Details page} for any application.\nAfter enabling this option, all (old and new) rules are applied immediately for all applications without explicitly enabling blocking for an application.\n\n\\seealsoinline{\\hyperref[subsec:faq:what-is-instant-component-blocking]{FAQ: What is instant component blocking\?}}</string>
    <string name="pages$settings-page$import-export-blocking-rules">It is possible to import or export blocking rules within App Manager for all applications. The types of rules (components, app ops or permissions) that should be imported or exported can also be selected.\nIt is also possible to import blocking rules from \\href{https://github.com/lihenggui/blocker}{Blocker} and \\href{https://github.com/tuyafeng/Watt}{Watt}.\nIf it is necessary to export blocking rules for a single application, the corresponding \\hyperref[sec:app-details-page]{App Details page} can be used to export rules, or for multiple apps, \\hyperref[subsec:batch-operations]{batch operations} can be used.\n\n\\seealsoinline{\\hyperref[sec:rules-specification]{Rules Specification}}\n\n\\paragraph{Export} Export blocking rules for all applications configured within App Manager.\nThis may include \\hyperref[subsec:faq:what-are-app-components]{app components}, app ops and permissions based on the options selected in the multi-choice options.\n\n\\paragraph{Import} Import previously exported blocking rules from App Manager.\nSimilar to export, this may include \\hyperref[subsec:faq:what-are-app-components]{app components}, app ops and permissions based on the options selected in the multi-choice options.\n\n\\paragraph{Import Existing Rules}\\label{par:import-existing-rules}\n\\phantomsection\nAdd components disabled by other applications to App Manager. App Manager only keeps track of the components disabled within App Manager.\nIf application components are blocked or disabled by other tools or applications, this option can be utilised to import them.\nOn clicking this option, App Manager will find the components potentially disabled by other applications or tools and list only the name of the applications along with the number of matched components.\nFor safety, all the applications are unselected by default. They have to be selected manually, and the blocking has to be re-applied via App Manager.\n\n\\begin{danger}{Caution}\n    Be careful when using this tool as there can be many false positives.\n    Choose only the applications that you are certain about.\n\\end{danger}\n\n\\paragraph{Import from Watt} Import configuration files from \\href{https://github.com/tuyafeng/Watt}{Watt}, each file\ncontaining rules for a single package and file name being the name of the package with \\texttt{.xml} extension.\n\n\\begin{tip}{Tip}\n    Location of configuration files in Watt: \\texttt{/sdcard/Android/data/com.tuyafeng.watt/files/ifw}\n\\end{tip}\n\n\\paragraph{Import from Blocker} Import blocking rules from \\href{https://github.com/lihenggui/blocker}{Blocker}, each file containing rules for a single package.\nThese files have a \\texttt{.json} extension.</string>
    <string name="pages$settings-page$remove-all-rules">One-click option to remove all rules configured within App Manager.\nThis will enable all blocked components, app ops will be set to their default values and permissions will be granted.</string>
    <string name="pages$settings-page$selected-users">This option lets you control the users App Manager should operate on. App Manager operates on all users in root or ADB mode by default.</string>
    <string name="pages$settings-page$saved-apk-name-format">Defines the format of the APK name to be used while saving it via batch operations or through profiles.\nApp Manager offers some special keywords enclosed inside \\texttt{\\%} (percentage) signs and available below the input box.\nThese keywords are:\n\\begin{itemize}\n    \\item \\textbf{\\texttt{label}.} Denotes the name or label of the application. This can be localised to the configured language depending on the app.\n    \\item \\textbf{\\texttt{package\\_name}.} Denotes the name of the package or application ID, the unique identifier that each application has.\n    \\item \\textbf{\\texttt{version}.} Denotes the current version of the application extracted from its manifest.\n    \\item \\textbf{\\texttt{version\\_code}.} Denotes the current version code of the application that can be used to separate two versions of the same application.\n    \\item \\textbf{\\texttt{min\\_sdk}.} Denotes the minimum SDK (i.e.\\ Android framework version) that the application can operate on. This data is only available since Android 7 (Nougat).\n    \\item \\textbf{\\texttt{target\\_sdk}.} Denotes the SDK that this application targets. The application can operate on higher SDK but only in the compatibility mode.\n    \\item \\textbf{\\texttt{datetime}.} Denotes the time and date when the APK is exported.\n\\end{itemize}</string>
    <string name="pages$settings-page$import-export-keystore">Import or export the KeyStore used by App Manager. This is a Bouncy Castle KeyStore with \\texttt{bks} extension.\nTherefore, other KeyStore such as Java KeyStore (JKS) or PKCS \\#12 are not supported.\nIf a key is needed to be imported from such a KeyStore, the relevant options should be should as specified above.</string>
    <string name="pages$settings-page$device-info">Display Android version, security, CPU, GPU, battery, memory, screen, languages, user info, etc.</string>
    <string name="pages$scanner-page$$section-title">Scanner Page</string>
    <string name="pages$scanner-page$$missing-signatures-title">Missing Signatures</string>
    <string name="pages$scanner-page$intro">\\textbf{Scanner page} appears after clicking on the \\emph{scanner} button in the \\hyperref[subsec:app-info-tab]{App Info tab}.\nExternal APK files can also be opened for scanning from file managers, web browsers, etc.\n\nIt scans for trackers and libraries, and displays the number of trackers and libraries as a summary. It also displays\nchecksums of the APK file as well as the signing certificates. If VirusTotal is configured in the settings,\nit also attempts to retrieve reports from VirusTotal, or uploads the APK file if it is not in the database.\n\n\\begin{danger}{Disclaimer}\n    App Manager only scans an application statically without prejudice. The application may provide the options for opting out,\n    or in some cases, certain features of the tracker may not be used at all by the application (e.g.\\ F-Droid),\n    or some applications may simply use them as placeholders to prevent the breaking of certain features (e.g.\\ Fennec F-Droid).\n    \\textbf{The intention of the scanner is to give you an idea about what the APK might contain. It should be taken as an initial step for further investigations.}\n\\end{danger}\n\nClicking on the first item (i.e.\\ number of classes) opens a new page containing a list of tracker classes for the application.\nAll classes can also be viewed by clicking on the \\textit{Toggle Class Listing} menu.\nA sneak-peek of each class can be viewed by simply clicking on any class item. In Android 8 (Oreo) and later,\nthis includes the whole SMALI version of the class, and can be converted into Java using the corresponding option.\n\n\\begin{tip}{Notice}\n    Due to various limitations, it is not possible to scan all the components of an APK file. This is especially true if\n    an APK is highly obfuscated. The scanner also does not check strings (or website signatures).\n\\end{tip}\n\nThe second item lists the number of trackers along with their names. Clicking on the item displays a dialog containing\nthe name of trackers, matched signatures, and the number of classes against each signature. Some tracker names may have\n$^2$ prefix which indicates that the trackers are in the \\href{https://etip.exodus-privacy.eu.org}{ETIP} stand-by list\ni.e.\\ whether they are actual trackers is still being investigated.\n\nThe third item lists the number of libraries along with their names. The information are mostly taken from\n\\href{https://gitlab.com/IzzyOnDroid/repo}{IzzyOnDroid repo}.\n\n\\seealsoinline{\\hyperref[subsec:tracker-classes-versus-tracker-components]{FAQ: Tracker classes vs tracker components}}</string>
    <string name="pages$scanner-page$missing-signatures">At the bottom of the page, there is a special item denoting the number of missing signatures (i.e.\\ missing classes).\nThe missing signatures are the ones that AM has failed to match against any known libraries. The number itself has no\nparticular meaning as many libraries contain hundreds of classes, but clicking on the item will bring up a dialog\ncontaining the signatures which is helpful in inspecting the missing signatures. \\textbf{This feature is only intended\nfor people who know what a missing signature is and what to do with it, other users should ignore it.}</string>
    <string name="pages$interceptor-page$$section-title">Interceptor Page</string>
    <string name="pages$interceptor-page$$intent-filters-title">Intent Filters</string>
    <string name="pages$interceptor-page$$action-title">Action</string>
    <string name="pages$interceptor-page$$data-title">Data</string>
    <string name="pages$interceptor-page$$mime-type-title">MIME Type</string>
    <string name="pages$interceptor-page$$categories-title">Categories</string>
    <string name="pages$interceptor-page$$flags-title">Flags</string>
    <string name="pages$interceptor-page$$extras-title">Extras</string>
    <string name="pages$interceptor-page$$uri-title">URI</string>
    <string name="pages$interceptor-page$$matching-activities-title">Matching Activities</string>
    <string name="pages$interceptor-page$$reset-to-default-title">Reset to Default</string>
    <string name="pages$interceptor-page$$send-edited-intent-title">Send Edited Intent</string>
    <string name="pages$interceptor-page$intro">Interceptor can be used to intercept communication between applications using \\texttt{Intent}.\nIt works as a man-in-the-middle between the source and the destination applications.\nIt offers a feature-complete user interface for editing \\texttt{Intent}s.\n\n\\begin{warning}{Warning}\n    Interceptor only works for \\textit{implicit} intents where the \\hyperref[subsec:faq:what-are-app-components]{app component} isn\'t specified.\n\\end{warning}\n\n\\begin{amseealso}\n    \\item \\href{https://developer.android.com/guide/components/intents-common}{Common Intents}\n    \\item \\href{https://developer.android.com/guide/components/intents-filters}{Intents and Intent Filters}\n\\end{amseealso}</string>
    <string name="pages$interceptor-page$intent-filters">Intent filters are used by the applications to specify the tasks they are able to perform or the tasks they are going to perform using other applications.\nFor example, when you\'re opening a PDF file using a file manager, the file manager will try to find the applications to open the PDF with.\nTo find the right applications, the file manager will create an Intent with filters such as the MIME type and ask the system to retrieve the applications capable of opening this filter.\nThe system will search through the Manifest of the installed applications to match the filter and list the application components that are able to open this filter (in our case the PDF).\nAt this, either the file manager will open the desired application component all by itself or use a system provided option to open it.\nIf multiple application components are able to open it and no default is set, you may get a prompt where you have to choose the right application component.</string>
    <string name="pages$interceptor-page$action">Action specifies the generic action to perform such as \\texttt{android.intent.action.VIEW}. Applications often declare\nthe relevant actions in the Manifest file to catch the desired Intents. The action is particularly useful for broadcast\nIntent where it plays a vital rule. In other cases, it works as an initial way to filter out the relevant application components.\nGeneric actions such as \\texttt{android.intent.action.VIEW} and \\texttt{android.intent.action.SEND} are widely used by applications.\nHence, setting this alone may match many application components.</string>
    <string name="pages$interceptor-page$data">Data is originally known as URI (Uniform Resource Identifier) defined in \\href{http://www.faqs.org/rfcs/rfc2396.html}{RFC 2396}.\nIt can be web links, file location, or a special feature called \\textit{content}. Contents are an Android feature managed by the \\hyperref[subsubsec:providers]{content providers}.\nData are often associated with a \\hyperref[subsubsec:mime-type]{MIME type}.\n\nExamples:</string>
    <string name="pages$interceptor-page$mime-type">MIME type of the \\hyperref[subsubsec:data]{data}. For example, if the data field is set to \\texttt{file:///sdcard/AppManager.apk},\nthe associated MIME type can be \\texttt{application/vnd.android.package-archive}.</string>
    <string name="pages$interceptor-page$categories">This is similar to \\hyperref[subsubsec:action]{action} in the sense that it is also used by the system to filter application components.\nThis has no further benefits. Unlike \\textit{action}, there can be more than one category. Clicking on the \\textit{plus} button next to the title allows adding more categories.</string>
    <string name="pages$interceptor-page$flags">Flags are useful in determining how system should behave during the launch or after the launch of an activity.\nThis should not be touched as it requires some technical background. The \\textit{plus} button next to the title can be used to add one or more flags.</string>
    <string name="pages$interceptor-page$extras">Extras are the key-value pairs used for supplying additional information to the destination component. More extras can be added using the \\textit{plus} button next to the title.</string>
    <string name="pages$interceptor-page$uri">Represents the entire Intent as a URI (e.g. \\texttt{intent://\\dots}). Some data cannot be converted to string,\nand as a result, they might not appear here.</string>
    <string name="pages$interceptor-page$matching-activities">List all the activity components that matches the Intent. This is internally determined by the system (rather than App Manager).\nThe launch button next to each component can be used to launch them directly from App Manager.</string>
    <string name="pages$interceptor-page$reset-to-default">Reset the Intent to its initial state.</string>
    <string name="pages$interceptor-page$send-edited-intent">Resend the edited Intent to the destination application. This may open a list of applications where the desired application is needed to be selected.\nThe result received from the target application will be sent to the source application. As a result, the source application will not know if there was a man-in-the-middle.</string>
    <string name="pages$shared-prefs-editor-page$$section_title">Shared Preferences Editor Page</string>
    <string name="pages$shared-prefs-editor-page$intro">Shared preferences can be edited in this page. Clicking any item on the list opens the edit dialog where the item can be\nedited. The floating action button in the bottom-right corner can be used to add a new item. To save or delete the file,\nor to discard current changes, the respective options in the menu can be used.</string>
    <string name="guide$main$$guides-chapter-title">Guides</string>
    <string name="guide$aot$$section-title">ADB over TCP</string>
    <string name="guide$aot$$enable-dev-options-title">Enable developer options</string>
    <string name="guide$aot$$location-dev-options-title">Location of developer options</string>
    <string name="guide$aot$$how-to-enable-dev-options-title">How to enable developer options</string>
    <string name="guide$aot$$enable-usb-debugging-title">Enable USB debugging</string>
    <string name="guide$aot$$miui-usb-debug-title">Xiaomi (MIUI)</string>
    <string name="guide$aot$$emui-usb-debug-title">Huawei (EMUI)</string>
    <string name="guide$aot$$realme-usb-debug-title">Realme</string>
    <string name="guide$aot$$oneplus-usb-debug-title">OnePlus (Oxygen OS)</string>
    <string name="guide$aot$$lg-usb-debug-title">LG</string>
    <string name="guide$aot$$troubleshooting-usb-debug-title">Troubleshooting</string>
    <string name="guide$aot$$setup-adb-on-pc-title">Setup ADB on PC or Mac</string>
    <string name="guide$aot$$setup-adb-win-title">Windows</string>
    <string name="guide$aot$$setup-adb-mac-title">macOS</string>
    <string name="guide$aot$$setup-adb-linux-title">Linux</string>
    <string name="guide$aot$$configure-aot-title">Configure ADB over TCP</string>
    <string name="guide$aot$$aot-lineage-os-title">Lineage OS 17.1 and Earlier</string>
    <string name="guide$aot$$enable-aot-via-pc-title">Enable ADB over TCP via PC or Mac</string>
    <string name="guide$aot$$adb-mode-am-title">Enable ADB mode in App Manager</string>
    <string name="guide$aot$$references-title">References</string>
    <string name="guide$aot$intro">Many root-only features can still be used by enabling ADB over TCP. To do that, a PC or Mac is required with Android\nplatform-tools installed, and an Android phone with developer options \\&amp; USB debugging enabled.\n\n\\begin{tip}{Root users}\n    If superuser permission has been granted to App Manager, it can already execute privileged code without any problem.\n    \\textbf{Therefore, root users don\'t need to enable ADB over TCP.} If you still want to use ADB over TCP, you must\n    revoke superuser permission for App Manager and restart your device. You may see \\textit{working on ADB mode}\n    message without restarting but this isn\'t entirely true. The server (used as an interface between system and App\n    Manager) is still running in root mode. This is a known issue and will be fixed in a future version of App Manager.\n\\end{tip}\n\n\\seealsoinline{\\hyperref[sec:faq:adb-over-tcp]{FAQ: ADB over TCP}}</string>
    <string name="guide$aot$location-dev-options">\\textbf{Developer options} is located in Android \\textbf{Settings}, either directly near the bottom of the page (in most\nROMs) or under some other settings such as \\textbf{System} (Lineage OS, Asus Zenfone 8.0+), \\textbf{System} &gt;\n\\textbf{Advanced} (Google Pixel), \\textbf{Additional Settings} (Xiaomi MIUI, Oppo ColorOS), \\textbf{More Settings} (Vivo\nFuntouchOS), \\textbf{More} (ZTE Nubia). Unlike other options, it is not visible until explicitly enabled by the user. If\ndeveloper options is enabled, you can use the search box in Android \\textbf{Settings} to locate it as well.</string>
    <string name="guide$aot$how-to-enable-dev-options">This option is available within Android \\textbf{Settings} as well but like the location of the developer options, it\nalso differs from device to device. But in general, you have to find \\textbf{Build number} (or \\textbf{MIUI version} for\nMIUI ROMs and \\textbf{Software version} for Vivo FuntouchOS, \\textbf{Version} for Oppo ColorOS) and tap it at least 7\n(seven) times until you finally get a message saying \\textit{You are now a developer} (you may be prompted to insert\npin/password/pattern or solve captchas at this point). In most devices, it is located at the bottom of the settings\npage, inside \\textbf{About Phone}. But the best way to find it is to use the search box.</string>
    <string name="guide$aot$enable-usb-debug">After \\hyperref[subsubsec:location-of-developer-options]{locating the developer options}, enable \\textbf{Developer\noption} (if not already). After that, scroll down a bit until you will find the option \\textbf{USB debugging}. Use the\ntoggle button on the right-hand side to enable it. At this point, you may get an alert prompt where you may have to\nclick \\textit{OK} to actually enable it. You may also have to enable some other options depending on device vendor and\nROM. Here are some examples:</string>
    <string name="guide$aot$miui-usb-debug">Enable \\textbf{USB debugging (Security settings)} as well.</string>
    <string name="guide$aot$emui-usb-debug">Enable \\textbf{Allow ADB debugging in charge only mode} as well. When connecting to your PC or Mac, you may get a prompt\nsaying \\textbf{Allow access to device data\?} in which case click \\textbf{YES, ALLOW ACCESS}.\n\n\\begin{tip}{Notice}\n    Often the \\textbf{USB debugging} mode could be disabled automatically by the system. If that\'s the case, repeat the\n    above procedure.\n\\end{tip}</string>
    <string name="guide$aot$realme-usb-debug">Depending on the device and the version of operating system, you have to enable \\textbf{Disable Permission Monitoring},\nor \\textbf{USB debugging (Security settings)} along with \\textbf{Install via USB}.</string>
    <string name="guide$aot$oneplus-usb-debug">Depending on the device and the version of operating system, you have to enable \\textbf{Disable Permission Monitoring}.</string>
    <string name="guide$aot$lg-usb-debug">Make sure you have \\textbf{USB tethering} enabled.</string>
    <string name="guide$aot$troubleshooting-usb-debug">In case \\textbf{USB Debugging} is greyed out, you can do the following:\n\\begin{enumerate}\n    \\item Make sure you enabled USB debugging before connecting your phone to the PC or Mac via USB cable\n    \\item Enable USB tethering after connecting to PC or Mac via USB cable\n    \\item (For Samsung) If your device is running KNOX, you may have to follow some additional steps. See official\n    documentations or consult support for further assistant\n\\end{enumerate}</string>
    <string name="guide$aot$setup-adb-on-pc">In order to enable ADB over TCP, you have to set up ADB in your PC or Mac. \\textbf{\\textit{Lineage OS users can skip to\n\\Sref{subsubsec:lineage-os}.}}</string>
    <string name="guide$aot$setup-adb-win">\\begin{enumerate}\n    \\item Download the latest version of\n    \\href{https://dl.google.com/android/repository/platform-tools-latest-windows.zip}{Android SDK Platform-Tools} for\n    Windows\n    \\item Extract the contents of the zip file into any directory (such as \\texttt{C:\\textbackslash{adb}}) and navigate\n    to that directory using \\textit{Explorer}\n    \\item Open \\textbf{Command Prompt} or \\textbf{PowerShell} from this directory. You can do it manually from the start\n    menu or by holding \\texttt{Shift} and Right clicking within the directory in \\textit{File Explorer} and then\n    clicking either on \\textit{Open command window here} or on \\textit{Open PowerShell window here} (depending on\n    what you have installed). You can now access ADB by typing \\texttt{adb} (Command Prompt) or \\texttt{./adb}\n    (PowerShell). Do not close this window yet\n\\end{enumerate}</string>
    <string name="guide$aot$setup-adb-mac">\\begin{enumerate}\n    \\item Download the latest version of\n    \\href{https://dl.google.com/android/repository/platform-tools-latest-darwin.zip}{Android SDK Platform-Tools} for\n    macOS\n    \\item Extract the contents of the zip file into a directory by clicking on it. After that, navigate to that\n    directory using \\textit{Finder} and locate \\texttt{adb}\n    \\item Open \\textbf{Terminal} using \\textit{Launchpad} or \\textit{Spotlight} and drag-and-drop \\texttt{adb} from the\n    \\textit{Finder} window into the \\textit{Terminal} window. Do not close the \\textit{Terminal} window yet\n\\end{enumerate}\n\n\\begin{tip}{Tip}\n    If you are not afraid to use command line, here\'s a one liner:\n    \\begin{minted}[frame=lines]{bash}\ncd ~/Downloads &amp;&amp; curl -o platform-tools.zip -L \\\nhttps://dl.google.com/android/repository/platform-tools-latest-darwin.zip &amp;&amp; \\\nunzip platform-tools.zip &amp;&amp; rm platform-tools.zip &amp;&amp; cd platform-tools\n    \\end{minted}\n    After that, you can simply type \\texttt{./adb} in the in same \\textit{Terminal} window to access ADB\\\@.\n\\end{tip}</string>
    <string name="guide$aot$setup-adb-linux">\\begin{enumerate}\n    \\item Open your favourite terminal emulator. In most GUI-distros, you can open it by holding \\texttt{Control},\n    \\texttt{Alter} and \\texttt{T} at the same time\n    \\item Run the following command:\n    \\begin{minted}[frame=lines,autogobble]{bash}\ncd ~/Downloads &amp;&amp; curl -o platform-tools.zip -L \\\nhttps://dl.google.com/android/repository/platform-tools-latest-linux.zip &amp;&amp; \\\nunzip platform-tools.zip &amp;&amp; rm platform-tools.zip &amp;&amp; cd platform-tools\n    \\end{minted}\n    \\item If it is successful, you can simply type \\texttt{./adb} in the in \\textit{same} terminal emulator window or\n    type \\texttt{\\textasciitilde/Downloads/platform-tools/adb} in any terminal emulator to access ADB\\\@.\n\\end{enumerate}</string>
    <string name="guide$aot$aot-lineage-os">Lineage OS (or its derivatives) users can directly enable ADB over TCP using the developer options. To enable that,\ngo to the \\textbf{Developer options}, scroll down until you find \\textbf{ADB over Network}. Now, use the toggle button\non the right-hand side to enable it and skip to \\Sref{subsubsec:adb-mode-in-app-manager}.</string>
    <string name="guide$aot$enable-aot-via-pc">For other ROMs, you can do this using the command prompt/PowerShell/terminal emulator that you\'ve opened in the step 3\nof the previous section. In this section, I will use \\texttt{adb} to denote \\texttt{./adb}, \\texttt{adb} or any other\ncommand that you needed to use based on your platform and software in the previous section.\n\\begin{enumerate}\n    \\item Connect your device to your PC or Mac using a USB cable. For some devices, it is necessary to turn on\n    \\textit{File transfer mode (MTP)} as well\n    \\item To confirm that everything is working as expected, type \\texttt{adb devices} in your terminal. If your device\n    is connected successfully, you will see something like this:\n    \\begin{Verbatim}\nList of devices attached\nxxxxxxxx  device\n    \\end{Verbatim}\n    \\begin{tip}{Notice}\n        In some Android phones, an alert prompt will be appeared with a message \\textbf{Allow USB Debugging}\n        in which case, check \\textit{Always allow from this computer} and click \\textbf{Allow}.\n    \\end{tip}\n    \\item Finally, run the following command to enable ADB over TCP:\n    \\begin{minted}[frame=lines,autogobble]{bash}\nadb tcpip 5555\n    \\end{minted}\n\\end{enumerate}\n\n\\begin{danger}{Danger}\n    You cannot disable developer options or USB debugging after enabling ADB over TCP\\\@.\n\\end{danger}</string>
    <string name="guide$aot$adb-mode-am">After enabling ADB over TCP, relaunch App Manager. App Manager should detect ADB mode automatically. If it cannot,\nyou can change the mode of operation to ADB over TCP in the \\hyperref[subsec:mode-of-operation]{settings page}.\nThere, you can also verify whether App Manager has correctly detected ADB as indicated by the \\textit{inferred mode}.\n\n\\begin{tip}{Notice}\n    In some Android devices, the USB cable is needed to be disconnected from the PC before connecting to App Manager.\n\\end{tip}\n\n\\begin{warning}{Warning}\n    ADB over TCP will be disabled after a reboot. In that case, you have to follow \\Sref{subsubsec:enable-adb-over-tcp-via-pc-or-mac} again.\n\\end{warning}\n\n\\begin{warning}{Lineage OS users}\n    You can turn off \\textbf{ADB over Network} in developer options, but turning off this option will also stop App\n    Manager\'s remote server. So, turn it off only when you\'re not going to use App Manager in ADB over TCP mode.\n\\end{warning}</string>
    <string name="guide$aot$references">\\begin{enumerate}\n    \\item \\href{https://www.xda-developers.com/install-adb-windows-macos-linux}{How to Install ADB on Windows, macOS, and Linux}\n    \\item \\href{https://developer.android.com/studio/command-line/adb}{Android Debug Bridge (adb)}\n    \\item \\href{https://www.syncios.com/android/fix-usb-debugging-grey-out.html}{How to fix USB debugging greyed out\?}\n\\end{enumerate}</string>
    <string name="guide$wireless_debugging$$section-title">Wireless Debugging</string>
    <string name="guide$wireless_debugging$$enable-developer-options-and-usb-debugging-title">Enable developer options and USB Debugging</string>
    <string name="guide$wireless_debugging$$enable-wireless-debugging-title">Enable Wireless Debugging</string>
    <string name="guide$wireless_debugging$$pair-adb-with-appmanager-title">Pair ADB with App Manager</string>
    <string name="guide$wireless_debugging$$connect-am-to-adb-title">Connect App Manager to ADB</string>
    <string name="guide$wireless_debugging$intro">If you are running Android 11 or later and capable of connecting to a Wi-Fi network for, at least, a few moments,\nWireless Debugging is the recommended approach as it offers more protection than \\hyperref[sec:adb-over-tcp]{ADB over TCP}.\nIt requires two steps:\n\\begin{enumerate}\n    \\item \\textbf{ADB pairing.} The initial and a bit complex step for a novice user. Fortunately, this step is not required all the time.\n    \\item \\textbf{Connecting to ADB.} The final step which needs to be carried out every time you reboot your phone.\n\\end{enumerate}</string>
    <string name="guide$wireless_debugging$enable-developer-options-and-usb-debugging">See \\Sref{subsec:enable-developer-options} and \\Sref{subsec:enable-usb-debugging}.</string>
    <string name="guide$wireless_debugging$enable-wireless-debugging">In the \\textbf{Developer options} page, find \\textbf{Wireless debugging} and click to open it. In the new page,\nturn on \\textit{Use wireless debugging}. Depending on your configuration, you might see a dialog prompt asking you to verify your decision.\nIf that is the case, click \\textit{Allow}.\n\n\\begin{tip}{Tip}\n    For an easy access, you might want to add \\textbf{Wireless debugging} in the notification tiles section. To do this,\n    find \\textbf{Quick settings developer tiles} in the \\textbf{Developer options} page and click to open it.\n    In the new window, enable \\textit{Wireless debugging}. However, this option is unavailable in most operating systems.\n\\end{tip}</string>
    <string name="guide$wireless_debugging$pair-adb-with-app-manager">Keeping the \\textbf{Wireless debugging} page open, go to the \\textit{Recents} page either by swiping up or by using the dedicated navigation button,\nand click on the Settings logo to enable \\textit{Split screen}. It will wait for you to select or launch another application:\nLaunch or select App Manager.\n\nNow, in App Manager and navigate to \\textbf{Settings} and then enable \\textit{Wireless debugging} in \\hyperref[subsec:mode-of-operation]{Mode of operation}.\nAfter a few moments, App Manager will ask you to either connect or pair ADB\\\@. Select \\textit{pair}.\n\nIn the \\textbf{Wireless debugging} page (now should be on top among the splits), select \\textbf{Pair device with pairing code}.\nAt this, a dialog prompt will be displayed. Note down the pairing code but \\textbf{DO NOT} close the dialog prompt or the window.\n\nFinally, in App Manager, insert the pairing code and click \\textit{pair}. The port number should be detected automatically.\nIf it cannot, you have to insert the port number as well.\n\nIf the pairing is successful, it will display a \\textit{successful} message at the bottom, and the dialog prompt in the \\textbf{Wireless debugging} page will be dismissed automatically,\nand you will be able to see App Manager listed as an ADB client.\n\n\\begin{tip}{Notice}\n    If you do not use App Manager in ADB mode for a while (depending on devices), App Manager might be removed from the list.\n    In that case, you have to repeat the above procedure.\n\\end{tip}</string>
    <string name="guide$wireless_debugging$connect-am-to-adb">App Manager should be able to connect to ADB automatically if the mode of operation is set to \\textit{auto}, \\textit{ADB over TCP} or \\textit{Wireless debugging}.\nIf that is not the case, select \\textit{Wireless debugging} in the \\hyperref[subsec:mode-of-operation]{settings page}.\nIf App Manager fails to detect or connect to ADB, it will display a dialog prompt to connect or pair ADB. Select \\textit{connect}.\n\nNow, navigate to the \\textbf{Wireless debugging} page in Android settings, and note down the port number displayed in the page.\nIn App Manager\'s dialog prompt, replace the port number with the one that you have noted earlier, and click \\textit{connect}.\n\nOnce a connection has been established, you can safely disable \\textbf{Wireless debugging} in Android settings.\n\n\\begin{danger}{Caution}\n    Never disable \\textbf{USB Debugging} or any other additional options described in \\Sref{subsec:enable-developer-options-and-usb-debugging}.\n    If you do this, the remote server used by App Manager will be stopped, and you may have to start all over again.\n\\end{danger}</string>
    <string name="guide$backup-restore$$section-title">Back up/Restore</string>
    <string name="guide$backup-restore$$location-title">Location</string>
    <string name="guide$backup-restore$$options-title">Backup Options</string>
    <string name="guide$backup-restore$$backup-title">Backup</string>
    <string name="guide$backup-restore$$restore-title">Restore</string>
    <string name="guide$backup-restore$$delete-title">Delete Backup</string>
    <string name="guide$backup-restore$intro">App Manager has a modern, advanced and easy-to-use backup/restore system implemented from the scratch.\nThis is probably the only app that has the ability to restore not only the app or its data but also permissions and\nrules that you\'ve configured within App Manager.\nYou can also choose to back up an app multiple times (with custom names) or for all users.\n\n\\begin{amseealso}\n    \\item \\hyperref[subsec:1-click-back-up]{1-Click Ops: Back up}\n    \\item \\hyperref[subsec:1-click-restore]{1-Click Ops: Restore}\n\\end{amseealso}</string>
    <string name="guide$backup-restore$location">Back up/restore is a part of \\hyperref[subsec:batch-operations]{batch operations}.\nIt is also located inside the \\hyperref[subsubsec:app-info-options-menu]{options menu} in the\n\\hyperref[subsec:app-info-tab]{App Info tab}.\nClicking on \\textbf{Backup/Restore} opens the \\textbf{Backup Options}.\nBackups are located at \\texttt{/storage/emulated/0/AppManager} by default.\nYou can configure custom backup location in the \\hyperref[subsubsec:backup-volume]{settings page} in which case the backups\nwill be located at the \\texttt{AppManager} folder in the selected volume.\n\n\\begin{tip}{Note}\n    If one or more selected apps do not have any backup, the \\textbf{Restore} and \\textbf{Delete Backup} options will\n    not be displayed.\n\\end{tip}</string>
    <string name="guide$backup-restore$options">Backup options (internally known as backup flags) let you customise the backups on the fly.\nHowever, the customisations will not be remembered for the future backups.\nIf you want to customise this dialog, use \\hyperref[subsubsec:settings-backup-options]{Backup Options} in the \\hyperref[sec:settings-page]{Settings page}.\n\nA complete description of the backup options is given below:\n\\begin{itemize}\n    \\item \\textbf{APK files.} Whether to back up the APK files.\n    This includes the \\textit{base APK} file along with the \\texttt{split APK} files if they exist.\n\n    \\item \\textbf{Internal data.} Whether to back up the internal data directories.\n    These directories are located at \\texttt{/data/user/&lt;user\\_id&gt;} and (for Android N or later) \\texttt{/data/user\\_de/&lt;user\\_id&gt;}.\n\n    \\item \\textbf{External data.} Whether to back up data directories located in the internal memory as well as SD Card (if exists).\n    External data directories often contain non-essential app data or media files (instead of using the dedicated media folder) and may increase the backup size.\n    However, it might be essential for some apps.\n    Although it isn\'t checked by default (as it might dramatically increase the size of the backups), you may have to check it in order to ensure a smooth restore of your backups.\n    \\begin{warning}{Caution}\n        Internal data folders should always be backed up if you are going to back up the external data folders.\n        However, it could be useful to back up only the external folders if the app in question downloads a lot of assets from the Internet.\n    \\end{warning}\n\n    \\item \\textbf{OBB and media.} Whether to back up or restore the OBB and the media directories located in the\n    external storage or the SD Card.\n    This is useful for games and the graphical software which actually use these folders.\n\n    \\item \\textbf{Cache.} Android apps have multiple cache directories located at every data directories (both internal and external).\n    There are two types of cache: \\textbf{cache} and \\textbf{code cache}.\n    Disabling this option excludes both cache directories from all the data directories.\n    It is generally advised to exclude cache directories since most apps do not clear the cache regularly and usually handled by the OS itself.\n    Apps such as Telegram may use a very large cache (depending on the storage space) which may dramatically increase the backup size.\n    When it is disabled, AM also ignores the \\textbf{no\\_backup} directories.\n\n    \\item \\textbf{Extras.} Backup/restore app permissions, net policy, battery optimization, SSAID, etc., enabled by default.\n    Note that, blocking rules are applied \\textit{after} applying the extras.\n    So, if an item is present in both places, it will be overwritten (i.e., the one from the blocking rules will be used).\n\n    \\item \\textbf{Rules.} This option lets you back up blocking rules configured within App Manager.\n    This might come in handy if you have customised permissions or block some components using App Manager as they will\n    also be backed up or restored when you enable this option.\n\n    \\item \\textbf{Backup Multiple.} Whether this is a multiple backup.\n    By default, backups are saved using their user ID\\\@.\n    Enabling this option allows you to create additional backups.\n    These backups use the current date-time as the default backup name, but you can also specify custom backup name\n    using the input field displayed when you click on the \\textbf{Backup} button.\n\n    \\item \\textbf{Custom users.} Backup or restore for the selected users instead of only the current user.\n    This option is only displayed if the system has more than one user.\n\n    \\item \\textbf{Skip signature checks.} When taking a backup, checksum of every file (as well as the signing\n    certificate(s) of the base APK file) is generated and stored in the \\texttt{checksums.txt} file.\n    When you restore the backup, the checksums are generated again and are matched with the checksums stored in the said file.\n    Enabling this option will disable the signature checks.\n    This option is applied only when you restore a backup.\n    During backup, the checksums are generated regardless of this option.\n    \\begin{warning}{Caution}\n        You should always disable this option to ensure that your backups are not modified by any third-party applications.\n        However, this would only work if you enabled encryption.\n    \\end{warning}\n\\end{itemize}\n\n\\seealsoinline{\\hyperref[subsubsec:settings-encryption]{Settings: Encryption}}</string>
    <string name="guide$backup-restore$backup">Backup respects all the backup options except \\textbf{Skip signature checks}.\nIf base backups (i.e., backups that don\'t have the \\textbf{Backup Multiple} option) already exist, you will get a warning as the backups will be overwritten.\nIf \\textbf{Backup Multiple} is set, you have an option to input the backup name, or you can leave it blank to use the current date-time.</string>
    <string name="guide$backup-restore$restore">Restore respects all the backup options and will fail if \\textbf{APK files} option is set, but the backup doesn\'t\ncontain such backups or in other cases, if the app isn\'t installed.\nWhen restoring backups for multiple packages, you can only restore the base backups (see \\hyperref[subsec:backup-restore-backup]{backup} section for an explanation).\nHowever, when restoring backups for a single package, you have the option to select which backup to restore.\nIf \\textbf{All users} option is set, AM will restore the selected backup for all users in the latter case but in the former case, it will restore base backups for the respective users.\n\n\\begin{tip}{Notice}\n    Apps that use storage access framework (SAF), SSAID or Android KeyStore works properly only after an immediate restart.\n\\end{tip}</string>
    <string name="guide$backup-restore$delete">Delete backup only respects \\textbf{All users} option and when it is selected, only the base backups for all users will be deleted with a prompt.\nWhen deleting backups for a single package, another dialog will be displayed where you can select the backups to delete.</string>
    <string name="guide$automation$$section-title">Automating Tasks</string>
    <string name="guide$automation$$generating-authorization-key-title">Generating authorization key</string>
    <string name="guide$automation$$general-configuration-title">Configuring tasks</string>
    <string name="guide$automation$$required-extras-title">Required extras</string>
    <string name="guide$automation$$features-title">Features</string>
    <string name="guide$automation$$triggering-a-profile-title">Triggering a profile</string>
    <string name="guide$automation$intro">It is possible to trigger profiles configured inside App Manager via third-party applications such as \\textbf{Automation} or \\textbf{Tasker}.\nTraditionally, \\texttt{Intent}s are used to trigger such operations.</string>
    <string name="guide$automation$generating-authorization-key">In order to ensure proper security, an authorization key is required. To generate a authorization key, go to \\textbf{Settings} page and then click \\textbf{Authorization Manager} at the bottom.\nIf an authorization key has not been generated, it will be generated automatically. The key can be regenerated as required.\n\n\\begin{danger}{Caution}\n    Regenerating the authorization key can have some side effects such as invalidation of all the previously configured Intents.\n\\end{danger}</string>
    <string name="guide$automation$general-configuration">The activity \\texttt{io.github.muntashirakon.AppManager.crypto.auth.AuthFeatureDemultiplexer} is responsible for handling all the automations.\nSending an intent to the activity lets App Manager perform the designated operation by redirecting the \\texttt{Intent} to the designated activity or service.</string>
    <string name="guide$automation$required-extras">It has two primary extras required in all conditions. The key names, data types are all follows:\n\\begin{enumerate}\n    \\item \\textbf{\\texttt{auth}.} (String value) The authorization key as described in the earlier section.\n    \\item \\textbf{\\texttt{feature}.} (String value) Name of the feature. Supported features are described in the next section.\n\\end{enumerate}</string>
    <string name="guide$automation$features">App Manager current support a single feature, namely \\texttt{profile}.</string>
    <string name="guide$automation$triggering-a-profile">In order to trigger a profile, \\texttt{feature} must have the value \\texttt{profile}. In addition, the following extras can be included:\n\\begin{enumerate}\n    \\item \\textbf{\\texttt{prof}.} (String value -- required) The name of the profile as displayed in the \\hyperref[sec:profiles-page]{Profiles page}.\n    \\item \\textbf{\\texttt{state}.} (String value -- optional) State of the profile -- currently \\texttt{on} or \\texttt{off} -- as specified in the documentation.\n    If this extra is not set, App Manager will display a prompt where a state must be selected. Therefore, for complete automation,\n    this option should be set.\n\\end{enumerate}</string>
    <string name="guide$net-policy$$section-title">Net Policy</string>
    <string name="guide$net-policy$intro">Short for \\textbf{Network policy} or network policies.\nIt is usually located in the Android settings under \\textbf{Mobile data \\&amp; Wifi} section in the app info page of an app.\nNot all policies are guaranteed to be included in this page (e.g.\\ Samsung), and not all settings are well-understood due to lack of documentation.\nApp Manager can display all the net policies declared in the \\href{https://android.googlesource.com/platform/frameworks/base/+/master/core/java/android/net/NetworkPolicyManager.java}{NetworkPolicyManager}.\nPolicies unknown to App Manager will have a \\textit{Unknown} prefix along with the policy constant name and number in the hexadecimal format.\nUnknown policies should be reported to App Manager for inclusion.\n\nNet policy allows a user to configure certain networking behaviour of an app without modifying the ip tables directly and/or running a firewall app.\nHowever, the features it offers largely depend on Android version and ROM. A list of known net policies are listed below:\n\n\\begin{enumerate}\n    \\item \\textbf{None} or \\textbf{\\texttt{POLICY\\_NONE}}: (AOSP) No specific network policy is set.\n    System can still assign rules depending on the nature of the app.\n\n    \\item \\textbf{Reject background data on metered networks} or \\textbf{\\texttt{POLICY\\_REJECT\\_METERED\\_BACKGROUND}}: (AOSP) Reject network usage on metered networks when the application is in background.\n\n    \\item \\textbf{Allow background data on metered networks even when Data Saver is on} or \\textbf{\\texttt{POLICY\\_ALLOW\\_METERED\\_BACKGROUND}}: (AOSP) Allow metered network use in the background even when data saving mode is enabled.\n\n    \\item \\textbf{Reject cellular data} or \\textbf{\\texttt{POLICY\\_REJECT\\_CELLULAR}} (Android 11+) or \\textbf{\\texttt{POLICY\\_REJECT\\_ON\\_DATA}} (up to Android 10): (Lineage OS) Reject mobile/cellular data.\n    Signals network unavailable to the configured app as if the mobile data is inactive.\n\n    \\item \\textbf{Reject VPN data} or \\textbf{\\texttt{POLICY\\_REJECT\\_VPN}} (Android 11+) or \\textbf{\\texttt{POLICY\\_REJECT\\_ON\\_VPN}} (up to Android 10): (Lineage OS) Reject VPN data.\n    Signals network unavailable to the configured app as if the VPN is inactive.\n\n    \\item \\textbf{Reject Wi-Fi data} or \\textbf{\\texttt{POLICY\\_REJECT\\_WIFI}} (Android 11+) or \\textbf{\\texttt{POLICY\\_REJECT\\_ON\\_WLAN}} (up to Android 10): (Lineage OS) Reject Wi-Fi data.\n    Signals network unavailable to the configured app as if the device is not connected to a Wi-Fi network.\n\n    \\item \\textbf{Disable network access} or \\textbf{\\texttt{POLICY\\_REJECT\\_ALL}} (Android 11+) or \\textbf{\\texttt{POLICY\\_NETWORK\\_ISOLATED}} (up to Android 10): (Lineage OS) Reject network access in all circumstances.\n    This is not the same as enforcing the other three policies above, and is the recommended policy for dodgy apps.\n    If this policy is enforced, there is no need to enforce the other policies.\n\n    \\item \\textbf{\\texttt{POLICY\\_ALLOW\\_METERED\\_IN\\_ROAMING}}: (Samsung) Possibly allow metered network use during roaming.\n    Exact meaning is currently unknown.\n\n    \\item \\textbf{\\texttt{POLICY\\_ALLOW\\_WHITELIST\\_IN\\_ROAMING}}: (Samsung) Possibly allow network use during roaming.\n    Exact meaning is currently unknown.\n\n    \\item \\textbf{Reject data on metered networks} or \\textbf{\\texttt{POLICY\\_REJECT\\_METERED}}: (Motorola) Reject network usage if it is a metered network.\n\n    \\item \\textbf{Reject background data} or \\textbf{\\texttt{POLICY\\_REJECT\\_BACKGROUND}}: (Motorola) Reject network usage in the background.\n\n    \\item \\textbf{Disable network access} or \\textbf{\\texttt{POLICY\\_REJECT\\_ALL}}: (Motorola) Reject network access altogether.\n    Like Lineage OS, it blocks internet connections via iptables. But whether it signals the unavailability of network to the configured app is not known.\n\\end{enumerate}\n\n\\begin{tip}{Note}\n    Corresponding Lineage OS patches are as follows:\n    \\begin{enumerate}\n        \\item \\href{https://github.com/LineageOS/android\\_frameworks\\_base/commit/a04932bafbbf7d99efd18276152cc2c9c9b2073e}{fw/b: Squash of app fw restriction commits}\n        \\item \\href{https://github.com/LineageOS/android\\_frameworks\\_base/commit/02c8c82854348f52afe2199f310f44b5f578b5b8}{fw/b: Add support for per app network isolation}\n    \\end{enumerate}\n\\end{tip}</string>
    <string name="faq$main$$faq-chapter-title">Frequently Asked Questions</string>
    <string name="faq$app-components$$section-title">App Components</string>
    <string name="faq$app-components$$what-are-app-components-title">What are the application components\?</string>
    <string name="faq$app-components$$limitations-title">How are the tracker and other components blocked in App Manager\? What are its limitations\?</string>
    <string name="faq$app-components$$other-tools-retained-in-am-title">Does app components blocked by other tools retained in App Manager\?</string>
    <string name="faq$app-components$$also-blocked-by-other-tools-title">What happens to the components blocked by App Manager which were previously blocked by other tools\?</string>
    <string name="faq$app-components$$what-is-component-blocking-title">What is instant component blocking\?</string>
    <string name="faq$app-components$$tracker-classes-versus-tracker-components-title">Tracker classes versus tracker components</string>
    <string name="faq$app-components$what-are-app-components">Activities, services, broadcast receivers (or only receivers) and content providers (or only providers) are jointly\ncalled application components. More technically, they all inherit the\n\\href{https://developer.android.com/reference/android/content/pm/ComponentInfo}{ComponentInfo} class and can be launched\nvia Intent.</string>
    <string name="faq$app-components$limitations">App Manager typically blocks application components (or tracker components) using a method called\n\\href{https://carteryagemann.com/pages/android-intent-firewall.html}{Intent Firewall (IFW)}, it is superior to\nother methods such as \\textit{pm} (PackageManager), \\href{https://github.com/RikkaApps/Shizuku}{Shizuku} or any other\nmethod that uses the package manager to enable or disable the components. If a component is disabled by the latter\nmethods, the application itself can detect that the component is being blocked and can re-enable it as it has full\naccess to its own components. (Many deceptive applications actually do this in order to keep the tracker components\nunblocked.) On the other hand, IFW is a true firewall and the application cannot detect if its components are being\nblocked. App Manager uses the term \\textit{block} rather than \\textit{disable} for this reason.\n\nEven IFW has some limitations which are primarily applicable for the system applications:\n\\begin{itemize}\n    \\item The application in question is whitelisted by the system i.e.\\ the system cannot function properly without\n    these applications and may cause random crashes. These applications include but not limited to Android System,\n    System UI, Phone Services. They will continue to work even if they are disabled or blocked.\n\n    \\item Another system application or system process has activated a specific component of the application in question\n    via interprocess communication (IPC). In this case, the component will be activated regardless of blocking status or\n    even if the entire application is disabled. If there is such a system application that is not needed, the only way\n    to prevent it from running is by getting rid of it.\n\\end{itemize}</string>
    <string name="faq$app-components$other-tools-retained-in-am">\\textbf{No.} But the application components blocked by the system or any other tools are displayed in the\n\\hyperref[subsec:component-tabs]{component tabs}. These rules can be imported from \\hyperref[par:import-existing-rules]{Settings}.\nHowever, it is not possible for App Manager to distinguish the components blocked by the third-party tools and\ncomponents blocked by the system. Therefore, the applications listed in the import page should be selected with care.</string>
    <string name="faq$app-components$also-blocked-by-other-tools">\\textit{App Manager blocks the components again} if requested. In case of unblocking, they will be reverted to the\ndefault state as specified in the manifest of the application. But if the components were blocked by\n\\href{https://www.myandroidtools.com}{MyAndroidTools (MAT)} with IFW method, they will not be unblocked by App Manager\nas it uses a different format. To fix this issue, the rules have to be imported from \\hyperref[par:import-existing-rules]{Settings}\nat first, in which case MAT\'s configurations will be permanently removed.</string>
    <string name="faq$app-components$what-is-component-blocking">When you block a component in the \\hyperref[sec:app-details-page]{App Details page}, the blocking is not applied by\ndefault. It is only applied when you apply blocking using the \\textit{Apply rules} option in the top-right menu. If you\nenable \\hyperref[subsubsec:instant-component-blocking]{instant component blocking}, blocking will be applied as soon as you block a component.\nIf you choose to block tracker components, however, blocking is applied automatically regardless of this setting.\nYou can also remove blocking for an application by simply clicking on \\textit{Remove rules} in the same menu in the \\textbf{App Details page}.\nSince the default behaviour gives you more control over applications, it is better to keep \\textit{instant component blocking} option disabled.</string>
    <string name="faq$app-components$tracker-classes-versus-tracker-components">All application components are classes but not all classes are components. In fact, only a few of the classes are components.\nThat being said, \\hyperref[sec:scanner-page]{scanner page} displays a list of trackers along with the number of classes,\nnot just the components. In all other pages, trackers and tracker components are used synonymously to denote tracker\ncomponents, i.e.\\ blocking tracker means blocking tracker components, not tracker classes.\n\n\\begin{tip}{Info}\n    Tracker classes that are not components cannot be blocked. They can only be removed by editing the application itself.\n\\end{tip}</string>
    <string name="faq$aot$$section-title">ADB over TCP</string>
    <string name="faq$aot$$restart-title">Do I have to enable ADB over TCP everytime I restart\?</string>
    <string name="faq$aot$$usb-debugging-title">Cannot enable USB debugging. What to do\?</string>
    <string name="faq$aot$$block-tracker-title">Can I block tracker or any other application components using ADB over TCP\?</string>
    <string name="faq$aot$$feature-adb-title">Which features can be used in ADB mode\?</string>
    <string name="faq$aot$restart">Unfortunately, yes. This is because the ADB daemon, the process responsible for ADB connection, is also restarted after\na reboot, and it does not re-enable ADB over TCP\\\@.</string>
    <string name="faq$aot$usb-debugging">See \\Sref{subsec:enable-usb-debugging} in \\Cref{ch:guides}.</string>
    <string name="faq$aot$block-tracker">ADB has limited number of \\href{https://github.com/aosp-mirror/platform_frameworks_base/blob/master/packages/Shell/AndroidManifest.xml}{permissions}\nand controlling application components is not one of them. However, the components of a \\textit{test-only} app can be\ncontrolled via ADB\\\@. If App Manager detects such an application, it enables the blocking options automatically.</string>
    <string name="faq$aot$feature-adb">Supported features are enabled automatically in the ADB mode. Supported features include disabling, force-stopping,\nclearing application data, granting or revoking app ops and permissions, and so on. It is also possible to install or\nuninstall applications without any prompt from the system.</string>
    <string name="faq$misc$$section-title">Miscellanea</string>
    <string name="faq$misc$$i-dont-use-root-adb-title">I don\'t use root/ADB. Am I completely safe from any harms\?</string>
    <string name="faq$misc$$how-tracker-updated-title">How are the trackers and libraries are updated\?</string>
    <string name="faq$misc$$apks-deleted-after-installed">Are APKs deleted after installed\?</string>
    <string name="faq$misc$$shizuku-title">Any plans for Shizuku\?</string>
    <string name="faq$misc$$bloatware-title">What are bloatware and how to remove them\?</string>
    <string name="faq$misc$i-dont-use-root-adb">Yes. AM cannot modify any system settings without root or ADB\\\@.</string>
    <string name="faq$misc$how-tracker-updated">Trackers and libraries are updated manually before making a new release.</string>
    <string name="faq$misc$apks-deleted-after-installed">No, APKs aren\'t deleted by App Manager after they are installed.</string>
    <string name="faq$misc$shizuku">App Manager\'s use of hidden API and privileged code execution is now much more complex and cannot be integrated with\nother third party apps such as \\href{https://shizuku.rikka.app}{Shizuku}. Here are some reasons for not considering\nShizuku (which now has Apache 2.0 license) for App Manager:\n\\begin{enumerate}\n    \\item Shizuku was initially non-free which led me to use a similar approach for App Manager to support both root\n    and ADB\n    \\item App Manager already supports both ADB and root which in some cases is more capable than Shizuku\n    \\item Relying on a third-party app for the major functionalities is not a good design choice\n    \\item Integration of Shizuku will increase the complexity of App Manager.\n\\end{enumerate}</string>
    <string name="faq$misc$bloatware">Bloatware are the unnecessary apps supplied by the vendor or OEM and are usually system apps. These apps are often used\nto track users and collect user data which they might sell for profits. System apps do not need to request any\npermission in order to access device info, contacts and messaging data, and other usage info such as your phone usage\nhabits and everything you store on your shared storage(s).\n\nThe bloatware may also include Google apps (such as Google Play Services, Google Play Store, Gmail, Google, Messages,\nDialer, Contacts), Facebook apps (the Facebook app consists of four or five apps), Facebook Messenger, Instagram,\nTwitter and many other apps which can also track users and/or collect user data without consent given that they all are\nsystem apps. You can disable a few permissions from the Android settings but be aware that Android settings hides almost\nevery permission any security specialist would call potentially \\emph{dangerous}.\n\nIf the bloatware were user apps, you could easily uninstall them either from Android settings or AM. Uninstalling system\napps is not possible without root permission. You can also uninstall system apps using ADB, but it may not work for all\napps. AM can uninstall system apps with root or ADB (the latter with certain limitations, of course), but these methods\ncannot \\emph{remove} the system apps completely as they are located in the \\emph{system} partition which is a read-only\npartition. If you have root, you can remount this partition to manually \\emph{purge} these apps but this will break Over\nthe Air (OTA) updates since data in the system partition has been modified. There are two kind of updates, delta\n(small-size, consisting of only the changes between two versions) and full updates. You can still apply full updates,\nbut the bloatware will be installed again, and consequently, you have to delete them all over again. Besides, not all\nvendors provide full updates.\n\nAnother solution is to disable these apps either from Android settings (no-root) or AM, but certain services can still\nrun in the background as they can be started by other system apps using Inter-process Communication (IPC). One possible\nsolution is to disable all bloatware until the service has finally stopped (after a restart). However, due to heavy\nmodifications of the Android frameworks by the vendors, removing or disabling certain bloatware may cause the System UI\nto crash or even cause bootloop, thus, (soft) bricking your device. You may search the web or consult the fellow users\nto find out more about how to debloat your device.\n\nFrom v2.5.19, AM has a new feature called \\hyperref[sec:profile-page]{profiles}. The\n\\hyperref[sec:profiles-page]{profiles page} has an option to create new profiles from one of the presets. The presets\nconsist of debloating profiles which can be used as a starting point to monitor, disable, and remove the bloatware from\na proprietary Android operating system.\n\n\\begin{warning}{Note}\n    In most cases, you cannot completely debloat your device. Therefore, it is recommended that you use a custom ROM\n    free from bloatware such as Graphene OS, Lineage OS or their derivatives.\n\\end{warning}</string>
    <string name="appendices$specifications$$chapter-title">Specifications</string>
    <string name="appendices$specifications$$rules-specification-title">Rules Specification</string>
    <string name="appendices$specifications$$background-title">Background</string>
    <string name="appendices$specifications$$rules-file-format-title">Rules File Format</string>
    <string name="appendices$specifications$$internal-title">Internal</string>
    <string name="appendices$specifications$$external-title">External</string>
    <string name="appendices$specifications$background">AM currently supports blocking activities, broadcast receivers, content providers, services, app ops and permissions,\nand in future I may add more blocking options. In order to add more portability, it is necessary to import/export all\nthese data.\n\nMaintaining a database should be the best choice when it comes to storing data. For now, several \\texttt{tsv} files\nwith each file having the name of the package and a \\texttt{.tsv} extension. The file/database will be queried/processed\nby the \\texttt{RulesStorageManager} class. Due to this abstraction, it should be easier to switch to database or\nencrypted database systems in future without changing the design of the entire project. Currently, All configuration\nfiles are stored at \\texttt{/data/data/io.github.muntashirakon.AppManager/Files/conf}.</string>
    <string name="appendices$specifications$internal">The format below is used internally within App Manager and is \\textit{not compatible with the external format.}\n\\begin{Verbatim}\n    &lt;name&gt; &lt;type&gt; &lt;mode&gt;|&lt;component_status&gt;|&lt;is_granted&gt;\n\\end{Verbatim}\nHere:\n\\begin{itemize}\n    \\item \\texttt{&lt;name&gt;} -- Component/permission/app op name (in case of app op, it could be string or integer)\n    \\item \\texttt{&lt;type&gt;} -- One of the \\texttt{ACTIVITY}, \\texttt{RECEIVER}, \\texttt{PROVIDER}, \\texttt{SERVICE},\n    \\texttt{APP\\_OP},  \\texttt{PERMISSION}\n    \\item \\texttt{&lt;mode&gt;} -- (For app ops) The associated \\hyperref[subsec:mode-constants]{mode constant}\n    \\item \\texttt{&lt;component\\_status&gt;} -- (For components) Component status\n    \\begin{itemize}\n        \\item \\texttt{true} -- Component has been applied (\\texttt{true} value is kept for compatibility)\n        \\item \\texttt{false} -- Component hasn\'t been applied yet, but will be applied in future (\\texttt{false} value\n        is kept for compatibility)\n        \\item \\texttt{unblocked} -- Component is scheduled to be unblocked\n    \\end{itemize}\n    \\item \\texttt{&lt;is\\_granted&gt;} -- (For permissions) Whether the permission is granted or revoked\n\\end{itemize}</string>
    <string name="appendices$specifications$external">External format is used for importing or exporting rules in App Manager.\n\\begin{Verbatim}\n    &lt;package_name&gt; &lt;component_name&gt; &lt;type&gt; &lt;mode&gt;|&lt;component_status&gt;|&lt;is_granted&gt;\n\\end{Verbatim}\nThis the format is essentially the same as above except for the first item which is the name of the package.\n\n\\begin{danger}{Caution}\n    The exported rules have a different format than the internal one and should not be copied directly to the\n    \\textbf{conf} folder.\n\\end{danger}</string>
    <string name="appendices$changelogs$$chapter-title">Changelogs</string>
</resources>
