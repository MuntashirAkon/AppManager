{
  "formatVersion": 1,
  "database": {
    "version": 5,
    "identityHash": "2d67750e288d10d848e222bdbe1942a1",
    "entities": [
      {
        "tableName": "app",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`package_name` TEXT NOT NULL, `user_id` INTEGER NOT NULL DEFAULT -10000, `label` TEXT, `version_name` TEXT, `version_code` INTEGER NOT NULL, `flags` INTEGER NOT NULL DEFAULT 0, `uid` INTEGER NOT NULL DEFAULT 0, `shared_uid` TEXT DEFAULT NULL, `first_install_time` INTEGER NOT NULL DEFAULT 0, `last_update_time` INTEGER NOT NULL DEFAULT 0, `target_sdk` INTEGER NOT NULL DEFAULT 0, `cert_name` TEXT DEFAULT '', `cert_algo` TEXT DEFAULT '', `is_installed` INTEGER NOT NULL DEFAULT true, `is_enabled` INTEGER NOT NULL DEFAULT false, `has_activities` INTEGER NOT NULL DEFAULT false, `has_splits` INTEGER NOT NULL DEFAULT false, `rules_count` INTEGER NOT NULL DEFAULT 0, `tracker_count` INTEGER NOT NULL DEFAULT 0, `last_action_time` INTEGER NOT NULL DEFAULT 0, PRIMARY KEY(`package_name`, `user_id`))",
        "fields": [
          {
            "fieldPath": "packageName",
            "columnName": "package_name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "userId",
            "columnName": "user_id",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "-10000"
          },
          {
            "fieldPath": "packageLabel",
            "columnName": "label",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "versionName",
            "columnName": "version_name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "versionCode",
            "columnName": "version_code",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "flags",
            "columnName": "flags",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "uid",
            "columnName": "uid",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "sharedUserId",
            "columnName": "shared_uid",
            "affinity": "TEXT",
            "notNull": false,
            "defaultValue": "NULL"
          },
          {
            "fieldPath": "firstInstallTime",
            "columnName": "first_install_time",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "lastUpdateTime",
            "columnName": "last_update_time",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "sdk",
            "columnName": "target_sdk",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "certName",
            "columnName": "cert_name",
            "affinity": "TEXT",
            "notNull": false,
            "defaultValue": "''"
          },
          {
            "fieldPath": "certAlgo",
            "columnName": "cert_algo",
            "affinity": "TEXT",
            "notNull": false,
            "defaultValue": "''"
          },
          {
            "fieldPath": "isInstalled",
            "columnName": "is_installed",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "true"
          },
          {
            "fieldPath": "isEnabled",
            "columnName": "is_enabled",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "false"
          },
          {
            "fieldPath": "hasActivities",
            "columnName": "has_activities",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "false"
          },
          {
            "fieldPath": "hasSplits",
            "columnName": "has_splits",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "false"
          },
          {
            "fieldPath": "rulesCount",
            "columnName": "rules_count",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "trackerCount",
            "columnName": "tracker_count",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "lastActionTime",
            "columnName": "last_action_time",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          }
        ],
        "primaryKey": {
          "columnNames": [
            "package_name",
            "user_id"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "log_filter",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `name` TEXT)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_name",
            "unique": true,
            "columnNames": [
              "name"
            ],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_name` ON `${TABLE_NAME}` (`name`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "file_hash",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`path` TEXT NOT NULL, `hash` TEXT, PRIMARY KEY(`path`))",
        "fields": [
          {
            "fieldPath": "path",
            "columnName": "path",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "hash",
            "columnName": "hash",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "path"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "backup",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`package_name` TEXT NOT NULL, `backup_name` TEXT NOT NULL, `label` TEXT, `version_name` TEXT, `version_code` INTEGER NOT NULL, `is_system` INTEGER NOT NULL, `has_splits` INTEGER NOT NULL, `has_rules` INTEGER NOT NULL, `backup_time` INTEGER NOT NULL, `crypto` TEXT, `meta_version` INTEGER NOT NULL, `flags` INTEGER NOT NULL, `user_id` INTEGER NOT NULL, `tar_type` TEXT, `has_key_store` INTEGER NOT NULL, `installer_app` TEXT, PRIMARY KEY(`backup_name`, `package_name`))",
        "fields": [
          {
            "fieldPath": "packageName",
            "columnName": "package_name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "backupName",
            "columnName": "backup_name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "label",
            "columnName": "label",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "versionName",
            "columnName": "version_name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "versionCode",
            "columnName": "version_code",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isSystem",
            "columnName": "is_system",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "hasSplits",
            "columnName": "has_splits",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "hasRules",
            "columnName": "has_rules",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "backupTime",
            "columnName": "backup_time",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "crypto",
            "columnName": "crypto",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "version",
            "columnName": "meta_version",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "flags",
            "columnName": "flags",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "userId",
            "columnName": "user_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "tarType",
            "columnName": "tar_type",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "hasKeyStore",
            "columnName": "has_key_store",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "installer",
            "columnName": "installer_app",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "backup_name",
            "package_name"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      }
    ],
    "views": [],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, '2d67750e288d10d848e222bdbe1942a1')"
    ]
  }
}